@using ObjectInfos;
@using BussinessFacade;
@using BussinessFacade.ModuleMemoryData
@using System.Xml
@model Billing_Header_Info

@{
    List<AllCodeInfo> _lstDockingType = MemoryData.AllCode_GetBy_CdTypeCdName("DOCKING", "DOCKING_TYPE");
    var lstDockingType = _lstDockingType.Select(x => new SelectListItem { Text = x.Content, Value = x.CdVal });


    List<AllCodeInfo> _lstStatus = MemoryData.AllCode_GetBy_CdTypeCdName("DOCKING", "STATUS");
    var lstStatus = _lstStatus.Select(x => new SelectListItem { Text = x.Content, Value = x.CdVal });

    List<AllCodeInfo> _lstDocumentType = MemoryData.AllCode_GetBy_CdTypeCdName("DOCKING", "DOCUMENT_TYPE");
    var lstDocumentType = _lstDocumentType.Select(x => new SelectListItem { Text = x.Content, Value = x.CdVal });

    List<AllCodeInfo> _lstPlace = MemoryData.AllCode_GetBy_CdTypeCdName("DOCKING", "PLACE_SUBMIT");
    var lstPlace = _lstDocumentType.Select(x => new SelectListItem { Text = x.Content, Value = x.CdVal });

    Model.Billing_Date = DateTime.Now;
    Model.Deadline = DateTime.Now.AddDays(30);
}
<script src="~/Content/Datetimepicker_master/jquery.datetimepicker.full.min.js"></script>
<link href="~/Content/Datetimepicker_master/jquery.datetimepicker.min.css" rel="stylesheet" />
<script>
    $.datetimepicker.setLocale('vi');
    $(document).ready(function () {
        $('.datepicker').datetimepicker({
            format: 'd/m/Y',
            formatDate: 'd/m/Y',
            timepicker: false,
            mask: '39/19/9999',
            validateOnBlur: true,
        });
    });
</script>

<style>
    /*độ rộng tên cột title từng trang là khác nhau nên khai báo ở trang đó luôn*/
    .div-search-title > div {
        width: 120px;
    }
</style>


<div class="" style="padding:5px 38px">
    <div class="divCover divCover_popup">

        <div class="div-search-ad">
            <div class="div-search-title">
                <div>Số bill<i class="redspan">(*)</i></div>
            </div>
            <div class="div-search-content">
                <div>
                    @Html.TextBoxFor(m => m.Case_Code, new { id = "txtCaseCode", @maxlength = "50", @disabled = "disabled" })
                </div>
            </div>
        </div>

        <div class="div-search-ad">
            <div class="div-search-title">
                <div>Case code<i class="redspan">(*)</i></div>
            </div>
            <div class="div-search-content">
                <div>
                    @Html.TextBoxFor(m => m.App_Case_Code, new { id = "txtApp_Case_Code", @maxlength = "50", @onblur = "onChangeApp_Case_Code()" })
                </div>
            </div>
        </div>

        <div id="divInfoApp" style="margin-top: 10px;">
            @Html.Partial("~/Areas/Manager/Views/Billing/_Partial_AppInfo.cshtml")
        </div>

        <div class="div-search-ad">
            <div class="div-search-title">
                <div>Ngày yêu cầu <i class="redspan">(*)</i></div>
            </div>
            <div class="div-search-content">
                <div>
                    @Html.TextBoxFor(m => m.Billing_Date, "{0:dd/MM/yyyy}",
                        new {
                            id = "txtBilling_Date",
                            @Value = Model.Billing_Date == DateTime.MinValue ? "" : Model.Billing_Date.ToString("dd/MM/yyyy"),
                            @placeholder = "dd/mm/yyyy",
                            @class = "datepicker",
                            @style = "width: 150px",
                            @onblur = "onChangeBilling_Date()"
                        })
                </div>
            </div>

            <div class="div-search-title">
                <div>Hạn thanh toán</div>
            </div>
            <div class="div-search-content">
                <div>
                    @Html.TextBoxFor(m => m.Deadline, "{0:dd/MM/yyyy}",
                       new {
                           @id = "txtDeadline",
                           @Value = Model.Deadline == DateTime.MinValue ? "" : Model.Deadline.ToString("dd/MM/yyyy"),
                           @placeholder = "dd/mm/yyyy",
                           @class = "datepicker",
                           @disabled = "disabled"
                       })
                </div>
            </div>
        </div>

        <div class="divCover cls_form_title">
            <img src="~/Content/icons/info_2.png" />
            <div class="cls_form_header">
                Chi tiết
            </div>
        </div>

        <div id="divDataBilling" class="divDataTables" style="overflow-x: auto;">
            @Html.Partial("~/Areas/Manager/Views/Billing/_PartialDetail_Insert_Billing.cshtml")
        </div>

    </div>
 
    <div class="form-group">
        <div class="form-group-bottom">
            <input type="submit" class="btn-default" value="Lưu" onclick="return doInsertBilling()" />
        </div>
    </div>
</div>

<script>

    $(document).ready(function () {

         
    });

    function onChangeApp_Case_Code() {
        try {
            var _App_Case_Code = $("#txtApp_Case_Code").val();
            if (_App_Case_Code != "") {

                $.ajax({
                    type: 'POST',
                    url: '/quan-ly-billing/danh-sach-billing/GetAppByCaseCode',
                    data: {
                        p_case_code: _App_Case_Code,
                    },
                    async: true, cache: false, traditional: true,
                    beforeSend: function () {
                        CreateRollingWaitingIcon(true);
                    },
                    success: function (data) {
                        CreateRollingWaitingIcon(false);
                        $("#divInfoApp").html(data);
                    }
                });
            }
        } catch (e) {
            CreateRollingWaitingIcon(true);
            alert(e);
        }
    }

    function onChangeBilling_Date() {
        try {

        } catch (e) {
            alert(e.toString());
        }
    }

    function doInsertBilling() {
        if (validateForm()) {
            nvsConfirm(null, "Bạn có chắc chắn muốn thêm billing này không?", function () {
                var formData = new FormData();
                collectData(formData);
                $.ajax({
                    url: '/quan-ly-billing/danh-sach-billing/do-insert-billing',
                    type: 'POST',
                    data: formData,
                    async: true, traditional: true, contentType: false, processData: false,
                    headers: { "cache-control": "no-cache" },
                    beforeSend: function () {
                        CreateRollingWaitingIcon(true);
                    },
                    success: function (data) {
                        CreateRollingWaitingIcon(false);
                        if (data.success == "-1") {
                            jError("Lỗi check lại kết nối tới server");
                            return false;
                        }
                        else {
                            jAlert('Thêm billing thành công!', "THÔNG BÁO", function () {
                                ClosePopUpBilling();
                                Search_Billing(1, 1);
                            });
                        }
                    },
                    error: function (e) {
                        CreateRollingWaitingIcon(false);
                        console.log(e);
                    }
                });
            });
        }
    }

    function validateForm() {
        if (CheckSessionTimeOut() == false) {
            return false;
        }

        var App_Case_Code = $("#txtApp_Case_Code").val();
        if (App_Case_Code == null) {
            jError("Case code không được bỏ trống!", "lỗi", function () {
                $("#txtApp_Case_Code").val('');
                $('#txtApp_Case_Code').focus();
            });
            return false;
        }

        var txtBilling_Date = $("#txtBilling_Date").val();
        if (checkDate("Billing", "#txtBilling_Date", txtBilling_Date) == false) {
            return false;
        }
      

        return true;
    }

    function collectData(formData) {
        try {
            formData.append('p_Docking_Info.App_Case_Code', $("#txtApp_Case_Code").val());
            formData.append('p_Docking_Info.Document_Name', $("#Document_Name").val());
            formData.append('p_Docking_Info.Docking_Type', $("#Docking_Type").val());
            formData.append('p_Docking_Info.Place_Submit', $("#Place_Submit").val());
            formData.append('p_Docking_Info.Document_Type', $("#Document_Type").val());
            formData.append('p_Docking_Info.Status', $("#Status").val());

            formData.append('p_Docking_Info.In_Out_Date', $("#txtIn_Out_Date").val());
            formData.append('p_Docking_Info.Deadline', $("#txtDeadline").val());
            formData.append('p_Docking_Info.Notes', $("#txtNotes").val());

            var pfile = $("#file_attach");//lay du lieu file
            if (pfile.val() != "") {
                var _file = pfile[0].files[0];
                formData.append("p_Docking_Info.File_Upload", _file);
            }
        } catch (e) {
            alert(e.toString());
        }
    }    
</script>
