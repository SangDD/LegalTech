@using BussinessFacade.ModuleMemoryData
@using BussinessFacade.ModuleUsersAndRoles
@using Common.CommonData
@using ObjectInfos;
@{
    ViewBag.Title = "iSearching";
    Layout = "~/ViewsShared/_Layout.cshtml";
    List<AllCodeInfo> _lstStatus = MemoryData.AllCode_GetBy_CdTypeCdName("SEARCH_OBJECT", "STATUS");
}

@try
{
    <style>
        /*độ rộng tên cột title từng trang là khác nhau nên khai báo ở trang đó luôn*/
        .div-search-title > div {
            width: 150px;
        }

        .ms-parent {
            margin: 0px 3px;
        }

        .ms-choice {
            height: 30px;
        }
    </style>

    <div class="divCover">
        <div class="d-nav">
            <img src="~/Content/icons/Body-icon-home.png" /> I
            <a href="/home">Home</a>
            <span class="red">></span>
            <a href="#">iSearching</a>
        </div>
    </div>
    <div class="divCover">
        <div class="classLine">
        </div>
    </div>

    @*Notify*@
    <div class="divCover">
        @Html.Partial("~/Areas/Home/Views/Shared/_Partial_Quick_Notify.cshtml")
    </div>

    <div class="d-main">


        <div class="divCover" id="div-search-simple">

            <div class="div-search-ad">
                <div class="div-search-title">
                    <div style="width: 120px">Case code</div>
                </div>
                <div>
                    <div style="width:200px">
                        <input type="text" id="txtCasecode" data-controlcondition="TRUE" />
                    </div>
                </div>
                <div class="div-search-title">
                    <div style="width: 120px">Client Reference</div>
                </div>
                <div class="div-search-content">
                    <div>
                        <input type="text" id="_txtClientReference" data-controlcondition="TRUE" />
                    </div>
                </div>

            </div>
            <div class="div-search-ad">
                <div class="div-search-title">
                    <div style="width: 120px">Trạng thái</div>
                </div>
                <div class="div-search-content">
                    <div style="width:200px">
                        <select id="txtCboStatus">
                            <option value="ALL">
                                Tất cả
                            </option>
                            @foreach (var item in _lstStatus)
                            {
                                <option value="@item.CdVal">
                                    @item.Content
                                </option>
                            }
                        </select>
                    </div>
                </div>
                <div class="div-search-title">
                    <div style="width: 120px">Khách hàng tạo</div>
                </div>
                <div class="div-search-content">
                    <div style="width:200px">
                        <input type="text" id="_txtCreateBy" data-controlcondition="TRUE" />
                    </div>
                </div>
                <div class="div-search-title">
                    <div style="width: 120px">Luật sư được phân</div>
                </div>
                <div class="div-search-content">
                    <div>
                        <input type="text" id="_txtLawer" data-controlcondition="TRUE" />
                    </div>
                </div>
            </div>
        </div>

        <div class="divCover">
            <div class="div-search-btn" style="width:450px;">
                <input type="button" value="Tìm kiếm" class="btn-default" onclick="findObjects(1, 1)" />
                @*<input type="button" value="Thêm mới" class="btn-default" onclick="AddNew()" />*@
            </div>
        </div>

        <div class="divCover">
            <div id="divTableObjects">
                @Html.Partial("/Areas/Manager/Views/SearchManage/_SearchData.cshtml")
            </div>
        </div>

    </div>

    <script>
        var _currentKeySearch = '/Areas/Manager/Views/SearchManage/ListSearch.cshtml';
        var _currentOptionFilter = '/Areas/Manager/Views/SearchManage/ListSearchFilter.cshtml';
        var _status = '', _casename = "", _clientref = "", _createby = "", _lawer = "";

        $(document).ready(function () {
            initAllSearchingData(_currentKeySearch, _currentOptionFilter, initOrderBySearching, setKeySearch, findObjects);
            $('#txtCasecode').focus();
            $('[data-controlcondition="TRUE"]').on('keypress',
                function (e) {
                    enterKeyPress(e, 'btnfindObjects');
                });
        });


        function findObjects(_pageNumber, _isSearching) {
            try {
                reinitSearchingConditions(_currentKeySearch, _currentOptionFilter, _pageNumber, _isSearching);
                if (isSearching === 1) {
                    _status = $("#txtCboStatus").val();
                    _casename = $("#txtCasecode").val() || "ALL";
                    _clientref = $("#_txtClientReference").val().trim() || "ALL";
                    _createby = $("#_txtCreateBy").val() || "ALL";
                    _lawer = $("#_txtLawer").val() || "ALL";

                } else {
                    window.arrKeySearch = window.keySearch.split('|');
                    $("#txtCboStatus option[value=" + _status + "]").prop("selected", true);
                    $("#txtCasecode").val(_casename);
                    $("#_txtClientReference").val().trim(_clientref);
                    $("#_txtCreateBy").val(_createby);
                    $("#_txtLawer").val(_lawer);
                }

                updateSearchingConditions("divNumberRecordOnPageListObjects", setKeySearch);

                $.ajax({
                    type: "POST",
                    headers: { "cache-control": "no-cache" },
                    url: "/quan-ly-search/findobject-search/",
                    data: {
                        keysSearch: keySearch,
                        options: optionFilter
                    },
                    async: false,
                    success: function (data) {
                        if (data != null) {
                            onResponseWhenSearching(data, "divTableObjects", findObjects);
                        }
                    }
                });
                return true;
            } catch (e) {
                alert(e.toString());
                return false;
            }


        }

        function setKeySearch() {
            window.keySearch = _status + "|" + _casename + "|" + _clientref + "|" + _createby + "|" + _lawer;
        }

        function initOrderBySearching() {
            window.colSort = 'MODIFIED_DATE';
            window.sortType = 'DESC';
        }

        function pageListOfObjects(_pagenum) {
            try {
                findObjects(_pagenum, 0);

            } catch (e) {
                console.log(e.message);
            }
        }

        function AddNew() {
            window.open("/quan-ly-search/them-moi");
        }


        function doDeleteObject(_id) {
            try {
                nvsConfirm(null, "Bạn có chắc chắn muốn xóa bản ghi search này không?", function () {
                    $.ajax({
                        url: "/quan-ly-search/danh-sach-search/do-delete-search",
                        type: "POST",
                        data: { p_id: _id },
                        headers: { "cache-control": "no-cache" },
                        async: false,
                        success: function (data) {
                            if (data.result >= 0) {
                                showSuccess("Xóa dữ liệu thành công!");
                                window.findObjects(1, 0);
                            }
                        },
                        error: function (e) {
                            console.log(e);
                        }
                    });

                });

            } catch (e) {
                alert(e.toString());
            }

        }


    </script>
}
catch (Exception)
{
    // ignored
}