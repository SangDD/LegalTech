@using ObjectInfos;
@{
    ApplicationHeaderInfo _AppHeaderInfo = new ApplicationHeaderInfo();
    if (ViewBag.objAppHeaderInfo != null)
    {
        _AppHeaderInfo = (ApplicationHeaderInfo)ViewBag.objAppHeaderInfo;
    }
}
@using WebApps.Resources;

<div id="toolbox">
    <ul>
        <li class="toTop" style=""><a href="#top" title="Lên đầu trang"><i style=" font-size: 27px; color: green;" class="fa fa-home"></i></a></li>
        <li class="email"><a href="javascript:;" title="Xem trước"><i class="fa fa-eye" target="_blank" onclick="return funcPreViewApplication();" style=" font-size: 27px; color: green;"></i></a></li>
    </ul>
</div>

<style>
    #toolbox {
        display: block;
    }

    #toolbox {
        position: fixed;
        right: 10px;
        bottom: 45%;
        margin-left: -550px;
    }
</style>


<script>

    function funGetData_Preview_3BPL01(url) {
        try {

            var formData = new FormData();
            formData.append("pInfo.Appcode", $("#txtAppCode").val());
            formData.append("pInfo.Languague_Code", '@WebApps.CommonFunction.AppsCommon.GetCurrentLang()');
            //Thông tin chủ đơn
            if (funcThongTinChuDon_Exp(formData, "1") != true) {
                return false;
            }

            // đại diện chủ đơn
            if (funcThongTinDaiDienChuDon_Exp(formData, "2") != true) {
                return false;
            }

            var v_RepMasterType = $("input[name='_2_DaiDienChuDon']:checked").val();
            formData.append("pInfo.Rep_Master_Type", v_RepMasterType);

            //Lấy thông tin detail
            var reponse = funcGetAppDetail(formData);
            if (reponse == false) {
                return false;
            }

            //Lấy thông tin file có trong đơn
            reponse = funGetDocumentFile(formData);
            if (reponse == false) {
                return false;
            }

            //
            reponse = funcGetCamKetChuDon(formData);
            if (reponse == false) {
                return false;
            }

            $.ajax({
                url: url,
                type: 'POST',
                data: formData,
                async: true,
                processData: false, contentType: false, traditional: true, dataType: "json",
                enctype: 'multipart/form-data', headers: { "cache-control": "no-cache" },
                beforeSend: function () {
                    CreateRollingWaitingIcon(true);
                },
                success: function (data) {
                    CreateRollingWaitingIcon(false);
                    if (data != null && data.status >= 0) {
                        return true;
                    } else {
                        return false;
                    }
                },
                error: function (e) {
                    CreateRollingWaitingIcon(false);
                    console.log(e);
                }
            });

            return true;
        } catch (e) {
            CreateRollingWaitingIcon(false);
        }
    }

    function funcPreViewApplication() {
        var preturn = funGetData_Preview_3BPL01("/trade-mark-3b/ket_xuat_fileIU");
        if (preturn == true || preturn == undefined) {
            OpenPreview("/trade-mark-3b/Pre-View");
        }
    }


    function OpenPreview(url) {
        try {
            w = 1100; //độ rộng form popup
            h = 600;//chiều cao
            var left = (screen.width - w) / 2;
            var top = (screen.height - h) / 4;  // for 25% - devide by 4  |  for 33% - devide by 3
            var targetWin = window.open(url, '@Resource.TM3B_XemThongTinDon', 'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=' + w + ', height=' + h + ', top=' + top + ', left=' + left);

        } catch (e) {
        }
    }
</script>