@using ObjectInfos;
@using WebApps.Session 
@using WebApps.CommonFunction;
@{
    WikiDoc_Info _DocdetailInfo = new WikiDoc_Info();
    if (ViewBag.DocdetailInfo != null)
    {
        _DocdetailInfo = ViewBag.DocdetailInfo;
    }
    string _styleVoting = "";
    try
    {
        _styleVoting = "width:" + Math.Round((_DocdetailInfo.RATING / (_DocdetailInfo.NUMBER_VOTED * 5) * 100), 2) + "%";
    }
    catch (Exception)
    {

        _styleVoting = "width:0%";
    }
    string userid = "ABCXYX";
    if (SessionData.CurrentUser != null)
    {
        userid = "|" + SessionData.CurrentUser.Id.ToString() + "|";
    }
    decimal _rating = 0;
    try
    {
        _rating =Math.Round(_DocdetailInfo.RATING / (_DocdetailInfo.NUMBER_VOTED * 5), 2);
    }
    catch (Exception)
    {

        _rating = 0;
    }
    string _LanguageCode = AppsCommon.GetCurrentLang();
    string _langlink = "/vi-vn";
    if (_LanguageCode != "VI_VN")
    {
        _langlink = "/en-gb";
    }
}
@*<script src="~/Scripts/WikiScript.js"></script>*@
<h1>
    @_DocdetailInfo.TITLE
</h1>
<style>
    .d-paging {
        border: none;
    }

    #div_wiki_datacontent_Detail {
        padding: 0px 0px 20px 0px;
    }

    .Box-Share,
    .clsBtnBack {
        position: absolute;
        background-repeat: no-repeat;
        height: 39px;
        width: 39px;
        -webkit-transition: 1s;
        -moz-transition: 1s;
        -ms-transition: 1s;
        -o-transition: 1s;
        transition: 1s;
        left: 28px;
    }

    .clsBtnBack {
        background-image: url(/Content/images/Tro_ve.png);
    left: 0;
    }

        .clsBtnBack:hover {
            background-image: url(/Content/images/Tro_ve_hover.png);
        }

    .Box-Share {
        right: 0;
        height: auto;
        width: 28px;
    }

        .Box-Share > div:last-of-type {
            margin-top: 2px;
            display: none;
        }

        .Box-Share ul li {
            height: 31px;
        }

    .clsBtnShare {
        margin-top: 15px;
        cursor: pointer;
        background: url(/Content/images/share.png) no-repeat;
        width: 28px;
        height: 35px;
        float: right;
    }

    .clsBtnDownload {
        margin-top: 15px;
        cursor: pointer;
        background: url(/Content/images/download.png) no-repeat;
        width: 28px;
        height: 35px;
        float: right;
    }

    .clsBtnCopy {
        margin-top: 15px;
        cursor: pointer;
        background: url(/Content/images/copy.png) no-repeat;
        width: 28px;
        height: 35px;
        float: right;
    }


    .social-likes {
        position: absolute;
        top: 45px;
        z-index: 9;
        background-color: #fff;
    }

    .downloadwiki {
        position: absolute;
        top: 45px;
        z-index: 9;
        background-color: #fff;
    }
</style>


<div class="new-cate"> @_DocdetailInfo.CREATED_BY - @_DocdetailInfo.MODIFIED_DATE.ToString("dd/MM/yyyy")</div>
<div class="mdc-card__actions">
    <div class="mdc-card__action-buttons" style="min-height: 36px">
        <div class="Box-Share">
            <div class="clsBtnShare" onclick="return funcLikeShareSocial(this)">
                <div style="color: #0d4a86;font-weight:bold; margin-left:40px"> SHARE</div>
            </div>
            <div class="social-likes">
                <div class="facebook" title="Share link on Facebook">
                </div>
                <div class="twitter" title="Share link on Twitter">
                </div>
                <div class="plusone" title="Share link on Google+">
                </div>
            </div>
        </div>
        @if (SessionData.CurrentUser != null)
        {
            <div class="Box-Share" style="margin-left:120px">

                <div class="clsBtnDownload" onclick="ExportDocToFile(@_DocdetailInfo.ID)">
                    <div style="color: #0d4a86;font-weight:bold; margin-left:32px"> DOWNLOAD</div>
                </div>
                <div class="socialdownloadwiki"></div>
            </div>
       
            <div class="Box-Share" style="margin-left:270px">
                <div class="clsBtnCopy click-copy" onclick="funcSetSelect()">
                    <div style="color: #0d4a86;font-weight:bold; margin-left:32px"> COPY</div>
                </div>
                <div class="socialdownloadwiki"></div>
            </div>
        }
     
           </div>
</div>
<div>
    <div>
        <div id="div_wikidoc_content" class="snippet-content">
            @Html.Raw(_DocdetailInfo.CONTENT)
        </div>

    </div>
    @if (!string.IsNullOrEmpty(_DocdetailInfo.FILE_URL01))
    {
        <span class="badge"><a target="_blank" href="@_DocdetailInfo.FILE_URL01">Sample 1</a></span>
    }

    @if (!string.IsNullOrEmpty(_DocdetailInfo.FILE_URL02))
    {
        <span class="badge"><a target="_blank" href="@_DocdetailInfo.FILE_URL02">Sample 2</a></span>
    }
    @if (!string.IsNullOrEmpty(_DocdetailInfo.FILE_URL03))
    {
        <span class="badge"><a target="_blank" href="@_DocdetailInfo.FILE_URL03">Sample 3</a></span>
    }
</div>
<div class="div_ratingcontent">
    <div class="kk-star-ratings disabled bottom-right rgt" >
        @if (SessionData.CurrentUser != null &&  _DocdetailInfo.USER_VOTED.Contains(userid) == false)
        {
            <div class="kksr-stars kksr-star gray">
                <div id="div_ratingcontent_percent" class="kksr-fuel kksr-star yellow" style="@_styleVoting"></div>
                <a href="javascript:;" id="voting_i01" data-wpel-link="internal" class="kksr-star" onmouseover="StarOnMouseOver('01')" onmouseout="StarOnMouseOut('01')" onclick="WikiDocVoting(1)"></a>
                <a href="javascript:;" id="voting_i02" data-wpel-link="internal" class="kksr-star" onmouseover="StarOnMouseOver('02')" onmouseout="StarOnMouseOut('02')" onclick="WikiDocVoting(2)"></a>
                <a href="javascript:;" id="voting_i03" data-wpel-link="internal" class="kksr-star" onmouseover="StarOnMouseOver('03')" onmouseout="StarOnMouseOut('03')" onclick="WikiDocVoting(3)"></a>
                <a href="javascript:;" id="voting_i04" data-wpel-link="internal" class="kksr-star" onmouseover="StarOnMouseOver('04')" onmouseout="StarOnMouseOut('04')" onclick="WikiDocVoting(4)"></a>
                <a href="javascript:;" id="voting_i05" data-wpel-link="internal" class="kksr-star" onmouseover="StarOnMouseOver('05')" onmouseout="StarOnMouseOut('05')" onclick="WikiDocVoting(5)"></a>
            </div>
        }
        else
        {
            <div class="kksr-stars kksr-star gray">
                <div id="div_ratingcontent_percent" class="kksr-fuel kksr-star yellow" style="@_styleVoting"></div>
                <a href="javascript:;" style="cursor:auto"></a>
                <a href="javascript:;" style="cursor:auto"></a>
                <a href="javascript:;" style="cursor:auto"></a>
                <a href="javascript:;" style="cursor:auto"></a>
                <a href="javascript:;" style="cursor:auto"></a>
            </div>
        }
        
            <div class="kksr-legend">
                <div itemprop="aggregateRating">
                    <span id="ratingValue">@_rating</span>
                    <span id="ratingCount">@_DocdetailInfo.NUMBER_VOTED</span> votes
                    <meta content="1"><div itemprop="itemReviewed">
                    </div>
                </div>
            </div>
</div>
</div>

@*<script src="~/Content/social-likes/social-likes.min.js"></script>*@

<script>
    function funcLikeShareSocial(a)
    {
        "display: block;" == $(a).siblings("div").attr("style") ? ($(a).siblings("div").fadeOut(),
          $(a).attr("style", 'background: url("/Content/images/share.png") no-repeat')) :
        (
        $(a).siblings("div").fadeIn(), $(a).attr("style", 'background: url("/Content/images/share_active.png") no-repeat')
        )
    }

    function StarOnMouseOver(_id)
    {
        try {
            for (var i = 0; i <= _id; i++) {
                $("#voting_i0" + i).addClass("orange");
            }

        } catch (e) {

        }
    }

    function StarOnMouseOut(_id) {
        try {
            for (var i = 0; i <= _id; i++) {
                $("#voting_i0" + i).removeClass("orange");
            }
        } catch (e) {

        }
    }

    function WikiDocVoting(_Point) {
        try {
            $.ajax({
                url: "/wiki-view/WikiDocVoting",
                type: "POST",
                data: { p_id: '@_DocdetailInfo.ID', p_point: _Point },
                headers: { "cache-control": "no-cache" },
                async: false,
                success: function (data) {
                    if (data != null) {
                        $("#div_ratingcontent_percent").removeAttr("style");
                        $("#div_ratingcontent_percent").attr("style", "width:" + data.WidthDiv + "%;");
                        $("#ratingValue").text(data.Rating);
                        $("#ratingCount").text(data.TotalVoted);
                        
                        for (var i = 0; i <= 4; i++) {
                            $("#voting_i0" + i).removeAttr("onmouseover");
                            $("#voting_i0" + i).removeAttr("StarOnMouseOut");
                            $("#voting_i0" + i).removeAttr("onclick");
                        }
                        
                    }
                },
                error: function (e) {
                    console.log(e);
                }
            });
        } catch (e) {
            alert(e.toString());
        }

    }
    function CopyToClipboard(containerid) {
        if (document.selection) {
            var range = document.body.createTextRange();
            range.moveToElementText(document.getElementById(containerid));
            range.select().createTextRange();
            document.execCommand("copy");

        } else if (window.getSelection) {
            var range = document.createRange();
            range.selectNode(document.getElementById(containerid));
            window.getSelection().addRange(range);
            document.execCommand("copy");
           // alert("text copied")
        }
    }

    function selectText(node) {
        node = document.getElementById(node);

        if (document.body.createTextRange) {
            const range = document.body.createTextRange();
            range.moveToElementText(node);
            range.select();
        } else if (window.getSelection) {
            const selection = window.getSelection();
            const range = document.createRange();
            range.selectNodeContents(node);
            selection.removeAllRanges();
            selection.addRange(range);
        } else {
            console.warn("Could not select text in node: Unsupported browser.");
        }
    }
    function funcSetSelect()
    {
        try {
            // clickable.addEventListener('click', () => selectText('div_wikidoc_content'));
            selectText('div_wikidoc_content');
            document.execCommand("copy");
        } catch (e) {

        }

    }
   // const clickable = document.querySelector('.click-copy');
   // clickable.addEventListener('click', () => selectText('div_wikidoc_content'));
</script>