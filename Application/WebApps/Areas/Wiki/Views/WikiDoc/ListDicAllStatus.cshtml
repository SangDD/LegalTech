@using BussinessFacade.ModuleMemoryData
@using BussinessFacade.ModuleUsersAndRoles
@using Common.CommonData
@using ObjectInfos;
@{
    ViewBag.Title = "Danh sách bài viết lưu tạm";
    Layout = "~/ViewsShared/_Layout.cshtml";
    List<WikiCatalogues_Info> _listcata = new List<WikiCatalogues_Info>();
    if (ViewBag.ListCata != null)
    {
        _listcata = ViewBag.ListCata;
    }
    int _CurrentStatus = ViewBag.CurrStatus;
    string _hef01 = "", _hef02 = "",  _hef04 = "", _hef05 = "";
    if (_CurrentStatus == 1)
    {
        _hef01 = "text-decoration: underline;";
    }
    if (_CurrentStatus == 2)
    {
        _hef02 = "text-decoration: underline;";
    }
    if (_CurrentStatus == 4)
    {
        _hef04 = "text-decoration: underline;";
    }
    if (_CurrentStatus == 3)
    {
        _hef05 = "text-decoration: underline;";
    }
    }

    @try
{
    <style>
        /*độ rộng tên cột title từng trang là khác nhau nên khai báo ở trang đó luôn*/
        .div-search-title > div {
            width: 150px;
        }
        .ms-parent
        {
            margin:0px 3px;
        }
        .ms-choice
        {
            height:30px; 
        }
    </style>

    <div class="divCover">
        <div class="d-nav">
            <img src="~/Content/icons/Body-icon-home.png" /> I
            <a href="/home">Home</a>
            <span class="red">></span>
            <a href="/wiki-doc/list">@WebApps.Resources.Resource.QuanLyWiki</a>
        </div>
    </div>
    <div class="divCover">
        <div class="classLine">
        </div>
    </div>

    <div class="d-main">
        <div class="divCover" >
            <input type="hidden" value="MODIFIED_DATE" id="colSorted" />
            <input type="hidden" value="DESC" id="SortType" />
            <input type="hidden" value="" id="OptionSorting" />
           <table style="margin:10px 0px">
               <tr>
                   <td>
                       <a  href="/vi-vn/wiki-manage/wiki-doc/add/0">1. @WebApps.Resources.Resource.ThemMoi</a>
                   </td>
               </tr>
               <tr>
                   <td>
                       <a style="@_hef01" href="/wiki-manage/wiki-doc/list/@CommonWiki.Stt_luutam">2. @WebApps.Resources.Resource.DanhSachBaiVietLuuTam</a> 
                   </td>
               </tr>
               <tr>
                   <td>
                       <a style="@_hef02" href="/wiki-manage/wiki-doc/list/@CommonWiki.Stt_guibai">  3. @WebApps.Resources.Resource.DanhSachBaiVietChoXuLy</a> 
                   </td>
               </tr>
               <tr>
                   <td>
                       <a style="@_hef04" href="/wiki-manage/wiki-doc/list/@CommonWiki.Stt_tuchoi">  4. @WebApps.Resources.Resource.DanhSachBaiVietBiTuChoi</a>
                   </td>
               </tr>
               <tr>
                   <td>
                       <a style="@_hef05" href="/wiki-manage/wiki-doc/list/@CommonWiki.Stt_daduyet">  5. @WebApps.Resources.Resource.DanhSachBaiVietDaDuyet</a>
                   </td>
               </tr>
           </table>

        </div>

        <div class="divCover" id="div-search-simple">

            <div class="div-search-ad">
                <div class="div-search-title">
                    <div style="width: 120px">@WebApps.Resources.Resource.ChuDeBaiViet</div>
                </div>
                <div>
                    <div style="width:200px">
                       <select id="cboSearchWikiCatalogue">
                           @*@foreach (WikiCatalogues_Info item in _listcata)
                           {
                               if (item.CATA_LEVEL == 1)
                               {
                                   <option value="@item.ID">
                                       @item.NAME
                                   </option>
                               }
                           }*@
                           <option value="ALL">
                               @WebApps.Resources.Resource.TatCa
                           </option>
                           @foreach (WikiCatalogues_Info item in _listcata)
                           {
                          
                                   <option value="@item.ID">
                                       @item.NAME
                                   </option>
                             
                           }
                       </select>
                    </div>
                </div>
                <div class="div-search-title">
                    <div style="width: 120px">@WebApps.Resources.Resource.Hashtag</div>
                </div>
                <div class="div-search-content">
                    <div>
                        <input type="text" id="txtSearchTitleHashtag" data-controlcondition="TRUE" />
                    </div>
                </div>
            </div>

        </div>

        <div class="divCover">
            <div class="div-search-btn" style="width:450px;">
                <input type="button" value="@WebApps.Resources.Resource.TimKiem" class="btn-default" onclick="findObjects(1, 1)" />
            </div>
        </div>

        <div class="divCover">
            <div id="divTableObjects">
                @Html.Partial("/Areas/Wiki/Views/WikiDoc/_PartialDocData.cshtml")
            </div>
        </div>
 
    </div>

    <script>
        var _currentKeySearch = '/Areas/Wiki/Views/WikiDoc/DocListBystatus.cshtml' + '@_CurrentStatus';
        var _currentOptionFilter = '/Areas/Wiki/Views/WikiDoc/DocListBystatus.cshtml_OptionFilter' + '@_CurrentStatus';
        var _status = '@_CurrentStatus', _catalogue = '', _titleHashtag = '';

        $(document).ready(function () {
              initAllSearchingData(_currentKeySearch, _currentOptionFilter, initOrderBySearching, setKeySearch, findObjects);

            $('txtSearchTitleHashtag').focus();
            $('[data-controlcondition="TRUE"]').on('keypress',
				function (e) {
				    enterKeyPress(e, 'btnfindObjects');
				});
        });


        function findObjects(_pageNumber, _isSearching) {
            try {

                reinitSearchingConditions(_currentKeySearch, _currentOptionFilter, _pageNumber, _isSearching);
                if (isSearching === 1) {
                    _status = '@_CurrentStatus';
                    _catalogue = $("#cboSearchWikiCatalogue").val();
                    _titleHashtag = $("#txtSearchTitleHashtag").val().trim();

                } else {
                  
                    window.arrKeySearch = window.keySearch.split('|');
                    if (arrKeySearch.length > 0)
                    {
                        _status = arrKeySearch[0];
                        _catalogue = arrKeySearch[1];
                        _titleHashtag = arrKeySearch[2];
                        if (_catalogue != "")
                        {
                            $("#cboSearchWikiCatalogue option[value=" + _catalogue + "]").attr("selected", "selected");
                        }
                       
                        $("#txtSearchTitleHashtag").val(_titleHashtag);
                    }
                  
                }

                updateSearchingConditions("divNumberRecordOnPageListObjects", setKeySearch);

                $.ajax({
                    type: "POST",
                    headers: { "cache-control": "no-cache" },
                    url: "/wiki-manage/wiki-doc/find-doc",
                    data: {
                        keysSearch: keySearch,
                        options: optionFilter
                    },
                    async: false,
                    success: function (data) {
                        if (data != null) {
                            onResponseWhenSearching(data, "divTableObjects", findObjects);
                        }
                    }
                });
                return true;
            } catch (e) {
                alert(e.toString());
                return false;
            }


        }

        function setKeySearch() {
            window.keySearch = _status + "|" +  _catalogue + "|" + _titleHashtag;
        }

        function initOrderBySearching() {
            window.colSort = 'MODIFIED_DATE';
            window.sortType = 'DESC';
        }

        function pageListOfObjects(_pagenum) {
            try {
                findObjects(_pagenum, 0);

            } catch (e) {
                console.log(e.message);
            }
        }

        $('#cboSearchWikiCatalogue').multipleSelect({
            filter: true,
            noMatchesFound: "@Html.Raw(WebApps.Resources.Resource.KhongTimThayDuLieu)",
            single: true,
            isdatastring: false,
            placeholder: "@Html.Raw(WebApps.Resources.Resource.TimKiemChuDe)"
        });


        function doDeleteObject(p_id) {
            try {

                    nvsConfirm(null, "@Html.Raw(WebApps.Resources.Resource.ConfirmDelete)", function () {
                        $.ajax({
                            url: "/wiki-manage/wiki-doc/do-delete-doc",
                            type: "POST",
                            data: { p_id: p_id },
                            headers: { "cache-control": "no-cache" },
                            async: false,
                            success: function (data) {
                                //if (data != null) {
                                //    if (onResponse(data)) {
                                //        ClosePopupDialog('dpop-users', true);
                                //        findObjects(1, 0);
                                //    }
                                //}
                                if (data.result >= 0) {
                                    showSuccess("@Html.Raw(WebApps.Resources.Resource.XoaThanhCong)");
                                    window.findObjects(1, 0);
                                }
                            },
                            error: function (e) {
                                console.log(e);
                            }
                        });

                    });

            } catch (e) {
                alert(e.toString());
            }

        }


    </script>
}
catch (Exception)
{
    // ignored
}