@*@using BussinessFacade.ModuleCommonCatalogData*@
@using BussinessFacade.ModuleMemoryData
@using BussinessFacade.ModuleUsersAndRoles
@using Common.CommonData
@using Common.Extensions
@model ObjectInfos.UserInfo
@{
    int _groupId = 0;
    if (Model.GroupSelectedCollection.Count > 0)
    {
        _groupId = Model.GroupSelectedCollection[0];
    }
}
@try
{
    <style>
        /*độ rộng tên cột title từng trang là khác nhau nên khai báo ở trang đó luôn*/
        .div-search-title > div {
            width: 120px;
        }
    </style>

    <div class="" style="padding:5px 38px">
        <div class="divCover divCover_popup">
            <div class="div-search-ad">
                <div class="div-search-title">
                    <div>Tên đăng nhập<i class="redspan">(*)</i></div>
                </div>
                <div class="div-search-content">
                    <div>
                        @Html.TextBoxFor(m => m.Username, new { @id = "txtUsernameEdit", maxlength = "64" })
                    </div>
                </div>
            </div>
            <div class="div-search-ad">
                <div class="div-search-title">
                    <div>Họ tên<i class="redspan">(*)</i></div>
                </div>
                <div class="div-search-content">
                    <div>
                        @Html.TextBoxFor(m => m.FullName, new { @id = "txtFullNameEdit", maxlength = "250" })
                    </div>
                </div>
            </div>
            <div class="div-search-ad">
                <div class="div-search-title">
                    <div>Ngày sinh</div>
                </div>
                <div class="div-search-content">
                    <div>
                        @*@Html.TextBoxFor(m => m.DateOfBirth.ToString("dd/MM/yyyy"))*@
                        @Html.TextBoxFor(m => m.DateOfBirth, new
                        {
                            @id = "txtDateOfBirthEdit",
                            @Value = Model.DateOfBirth == DateTime.MinValue ? "" : Model.DateOfBirth.ToString("dd/MM/yyyy"),
                            @class= "datetimepicker"
                        })
                    </div>
                </div>
            </div>

            <div class="div-search-ad">
                <div class="div-search-title">
                    <div>Giới tính</div>
                </div>
                <div class="div-search-content">
                    <div>
                        <select id="cboSexEdit">
                            @foreach (var item in AllCodeBL.GetAllCodeByCdName(AllCodeCdName.SexType))
                            {
                                <option @(item.CdVal == Model.Sex ? "selected=\"selected\"" : "") value="@item.CdVal">@item.Content</option>
                            }
                        </select>
                    </div>
                </div>
            </div>

            <div class="div-search-ad">
                <div class="div-search-title">
                    <div>Số điện thoại<i class="redspan">(*)</i></div>
                </div>
                <div class="div-search-content">
                    <div>
                        @Html.TextBoxFor(m => m.Phone, new { @style = "width:200px;", @id = "txtPhoneEdit", @maxlength = "16", @onkeypress = "isNumberKey()", @onkeyup = "isNumberKey()" })
                    </div>
                </div>
                <div class="div-search-title">
                    <div>Email </div>
                </div>
                <div class="div-search-content">
                    <div>
                        @Html.TextBoxFor(m => m.Email, new { @id = "txtEmailEdit", @maxlength = "250" })
                    </div>
                </div>
            </div>

            <div class="div-search-ad">
                <div class="div-search-title">
                    <div>Loại người dùng<i class="redspan">(*)</i></div>
                </div>
                <div class="div-search-content">
                    <div>
                        <select id="cboTypeEdit" style="width:200px">
                            @foreach (var item in MemoryData.AllCode_GetBy_CdTypeCdName("USER", "USER_TYPE"))
                            {
                                <option @(item.CdVal == Model.Type.ToString() ? "selected=\"selected\"" : "") value="@item.CdVal">@item.Content</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="div-search-title">
                    <div>Trạng thái </div>
                </div>
                <div class="div-search-content">
                    <div>
                        <select id="cboStatusEdit">
                            @foreach (var item in AllCodeBL.GetAllCodeByCdName(AllCodeCdName.UserStatus))
                            {
                                <option @(item.CdVal == Model.Status.ToString() ? "selected=\"selected\"" : "") value="@item.CdVal">@item.Content</option>
                            }
                        </select>
                    </div>
                </div>
            </div>

            <div class="div-search-ad">
                <div class="div-search-title">
                    <div>Nhóm</div>
                </div>
                <div class="div-search-content">
                    <div>
                        <select id="cboGroupUser">
                            <option value="-1">None</option>
                            @foreach (var item in MemoryData.GetAllGroup())
                            {
                                if (item.Id == _groupId)
                                {
                                    <option selected="selected" value="@item.Id">@item.Name</option>
                                }
                                else
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            }
                        </select>

                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="form-group-bottom">
                <input type="submit" class="btn-default" value="Lưu" onclick="return doEditUser()" />
            </div>
        </div>
    </div>

    <script>
		var userIdEdit = '@Model.Id',
			usernameEdit = '',
			fullNameEdit = '',
			passwordEdit = '',
			rePasswordEdit = '',
			dateOfBirthEdit = '@Model.DateOfBirth.ToDateStringN0()',
			sexEdit = '',
			emailEdit = '',
			phoneEdit = '',
			typeEdit = '',
			statusEdit = '',
			GroupIdEdit = '';
		$(document).ready(function () {
			$.datetimepicker.setLocale('vi');
			$('.datetimepicker').datetimepicker({
				timepicker: false,
				format: 'd/m/Y',
				//formatTime: 'H:i',
				formatDate: 'd/m/Y',
				mask: '39/19/9999',
				validateOnBlur: false,
				scrollInput: false
			});

			$('#txtDateOfBirthEdit').datetimepicker({ value: dateOfBirthEdit });
		});

		function doEditUser() {
			if (validateFormEditUser()) {
				var formData = new FormData();
				collectDataToEditUser(formData);
				$.ajax({
					url: '/quan-tri-he-thong/quan-ly-nguoi-dung/do-edit-user',
					type: 'POST',
					data: formData,
					processData: false,
					contentType: false,
					traditional: true,
					async: false,
					headers: { "cache-control": "no-cache" },
					success: function (data) {
						if (data != null) {
							if (onResponse(data)) {
                                ClosePopUpUser();
								window.findUsers(1, 0);
							}
						}
					},
					error: function (e) {
						console.log(e);
					}
				});
			}
		}

		function validateFormEditUser() {
			fullNameEdit = $('#txtFullNameEdit').val().trim();
			dateOfBirthEdit = $('#txtDateOfBirthEdit').val().trim();
			sexEdit = $('#cboSexEdit').val();
			emailEdit = $('#txtEmailEdit').val().trim();
			phoneEdit = $('#txtPhoneEdit').val().trim();
			typeEdit = $('#cboTypeAdd').val();
			statusEdit = $('#cboStatusEdit').val();
			GroupIdEdit = $('#cboGroupUser').val();

			if (fullNameEdit === "") {
				$('#txtFullNameEdit').focus().val('');
				showError('Họ tên không được để trống!');
				return false;
			}

			if (dateOfBirthEdit === "" || dateOfBirthEdit === window.maskDateTime_N0) {
				$('#txtDateOfBirthEdit').focus();
				showError('Ngày sinh không được để trống');
				return false;
			} else if (isValidDate_N0(dateOfBirthEdit) === false) {
				$('#txtDateOfBirthEdit').focus();
				showError('Ngày sinh không đúng định dạng (dd/mm/yyyy)!');
				return false;
			}

			if (emailEdit === "") {
				$('#txtEmailEdit').focus().val('');
				showError('Email không được để trống!');
				return false;
			} else if (!IsvalidEmail(emailEdit)) {
				$('#txtEmailEdit').focus();
				showError('Email không đúng định dạng!');
				return false;
			}

			if (phoneEdit === "") {
				$('#txtPhoneEdit').focus().val('');
				showError('Điện thoại không được để trống!');
				return false;
			}

			if (GroupIdEdit == "-1") {
			    $('#cboGroupUser').focus();
			    showError('Loại người dùng không được để trống!');
			    return false;
			}
			return true;
		}

		function collectDataToEditUser(formData) {
			formData.append('userInfo.Id', userIdEdit);
			formData.append('userInfo.FullName', fullNameEdit);
			formData.append('userInfo.DateOfBirth', dateOfBirthEdit);
			formData.append('userInfo.Sex', sexEdit);
			formData.append('userInfo.Email', emailEdit);
			formData.append('userInfo.Phone', phoneEdit);
			formData.append('userInfo.Type', typeEdit);
			formData.append('userInfo.Status', statusEdit);
			formData.append('GroupId', GroupIdEdit);
		}
    </script>
}
catch (Exception)
{
    // ignored
}