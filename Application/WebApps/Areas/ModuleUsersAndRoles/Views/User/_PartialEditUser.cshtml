@using BussinessFacade.ModuleCommonCatalogData
@using BussinessFacade.ModuleMemoryData
@using BussinessFacade.ModuleUsersAndRoles
@using Common.CommonData
@using Common.Extensions
@model ObjectInfos.ModuleUsersAndRoles.UserInfo
@try
{
	<div class="popup-opacity-wrapper"></div>
	<div class="d-popup" style="overflow: visible">
		<div class="d-popup-content grid grid-2cols">
			<div>
				<label>Tên đăng nhập</label>
				<input type="text" readonly="readonly" id="txtUsernameEdit" maxlength="64" value="@Model.Username" />
			</div>

			<div>
				<label>Họ tên <i class="redspan">(*)</i></label>
				<input type="text" id="txtFullNameEdit" maxlength="250" value="@Model.FullName" />
			</div>

			<div>
				<label>Ngày sinh <label>Ngày sinh </label> <i class="redspan">(*)</i></label>
				<input type="text" id="txtDateOfBirthEdit" class="datetimepicker" />
			</div>

			<div>
				<label>Giới tính</label>
				<select id="cboSexEdit">
					@foreach (var item in AllCodeBL.GetAllCodeByCdName(AllCodeCdName.SexType))
					{
						<option @(item.CdVal == Model.Sex ? "selected=\"selected\"" : "") value="@item.CdVal">@item.Content</option>
					}
				</select>
			</div>

			<div>
				<label>Email <i class="redspan">(*)</i></label>
				<input type="text" id="txtEmailEdit" maxlength="250" value="@Model.Email" />
			</div>

			<div>
				<label>Điện thoại <i class="redspan">(*)</i></label>
				<input type="text" id="txtPhoneEdit" value="@Model.Phone" maxlength="16" onkeypress="return isNumberKey()" onkeyup="return isNumberKey()" />
			</div>
			<div>
				<label>Loại người dùng <i class="redspan">(*)</i></label>
				<select id="cboTypeEdit">
					@foreach (var item in MemoryData.AllCode_GetBy_CdTypeCdName("USER", "USER_TYPE"))
                    {
						<option @(item.CdVal == Model.Type.ToString() ? "selected=\"selected\"" : "") value="@item.CdVal">@item.Content</option>
					}
				</select>
			</div>

			<div>
				<label>Trạng thái <i class="redspan">(*)</i></label>
				<select id="cboPositionEdit">
					@foreach (var item in AllCodeBL.GetAllCodeByCdName(AllCodeCdName.UserStatus))
                    {
						<option @(item.CdVal == Model.Status.ToString() ? "selected=\"selected\"" : "") value="@item.CdVal">@item.Content</option>
					}
				</select>
			</div>

			<div>
				<label>Nhóm quyền</label>
				<div class="groups-checkbox">
					@foreach (var item in GroupUserBL.GetAllGroups())
					{
						var chkbId = "chkbGroupIdEdit-" + item.Id;
						var groupSelected = Model.GroupSelectedCollection.Contains(item.Id) ? "checked=\"checked\"" : "";
						<input type="checkbox" data-groupuseredit="TRUE" @groupSelected class="facheck" id="@chkbId" value="@item.Id" />
						<label for="@chkbId"><i class="far fa-circle"></i>@item.Name</label>
						<br />
					}
				</div>
			</div>
		</div>
		<div class="d-popup-footer">
			<input type="submit" class="btn" value="Lưu" onclick="return doEditUser()" />
		</div>
	</div>

	<script>
		var userIdEdit = '@Model.Id',
			usernameEdit = '',
			fullNameEdit = '',
			passwordEdit = '',
			rePasswordEdit = '',
			dateOfBirthEdit = '@Model.DateOfBirth.ToDateStringN0()',
			sexEdit = '',
			emailEdit = '',
			phoneEdit = '',
			deparmentEdit = '',
			positionEdit = '',
			branchEdit = '',
			wareHouseEdit = '',
			unitPriceTypeEdit = '',
			viewOtherBranchEdit = 'false',
			seeProductTypeSEdit = 'false',
			changeInstanceWhenOutStockEdit = 'false',
			productMarkCodeEdit = '',
			statusEdit = '',
			arrGroupsEdit = '';
		$(document).ready(function () {
			$.datetimepicker.setLocale('vi');
			$('.datetimepicker').datetimepicker({
				timepicker: false,
				format: 'd/m/Y',
				//formatTime: 'H:i',
				formatDate: 'd/m/Y',
				mask: '39/19/9999',
				validateOnBlur: false,
				scrollInput: false
			});

			$('#txtDateOfBirthEdit').datetimepicker({ value: dateOfBirthEdit });

			$('#cboDepartmentEdit').multipleSelect({
				filter: true,
				single: true,
				isdatastring: false,
				maxHeight: 150,
				placeholder: "-- Chọn phòng ban --"
			});
			$('#cboPositionEdit').multipleSelect({
				filter: true,
				single: true,
				isdatastring: false,
				maxHeight: 150,
				placeholder: "-- Chọn chức vụ --"
			});
			$('#cboBranchEdit').multipleSelect({
				filter: true,
				single: true,
				isdatastring: false,
				maxHeight: 150,
				placeholder: "-- Chọn chi nhánh --"
			});
			$('#cboWareHouseEdit').multipleSelect({
				filter: true,
				single: true,
				isdatastring: false,
				maxHeight: 150,
				placeholder: "-- Chọn kho --"
			});
			$('#cboProductMarkCodeEdit').multipleSelect({
				filter: true,
				single: true,
				isdatastring: false,
				maxHeight: 150,
				placeholder: "-- Chọn hãng --"
			});

		});

		function doEditUser() {
			if (validateFormEditUser()) {
				var formData = new FormData();
				collectDataToEditUser(formData);
				$.ajax({
					url: '/quan-tri-he-thong/quan-ly-nguoi-dung/do-edit-user',
					type: 'POST',
					data: formData,
					processData: false,
					contentType: false,
					traditional: true,
					async: false,
					headers: { "cache-control": "no-cache" },
					success: function (data) {
						if (data != null) {
							if (onResponse(data)) {
								ClosePopupDialog('dpop-users', true);
								window.findUsers(1, 0);
							}
						}
					},
					error: function (e) {
						console.log(e);
					}
				});
			}
		}

		function validateFormEditUser() {
			fullNameEdit = $('#txtFullNameEdit').val().trim();
			dateOfBirthEdit = $('#txtDateOfBirthEdit').val().trim();
			sexEdit = $('#cboSexEdit').val();
			emailEdit = $('#txtEmailEdit').val().trim();
			phoneEdit = $('#txtPhoneEdit').val().trim();
			deparmentEdit = $('#cboDepartmentEdit').val();
			positionEdit = $('#cboPositionEdit').val();
			branchEdit = $('#cboBranchEdit').val();
			wareHouseEdit = $('#cboWareHouseEdit').val();
			unitPriceTypeEdit = $('#cboUnitPriceTypeEdit').val();

			if ($('#chkbViewOtherBranchEdit').is(':checked')) {
				viewOtherBranchEdit = 'true';
			}
			if ($('#chkbSeeProductTypeSEdit').is(':checked')) {
				seeProductTypeSEdit = 'true';
			}
			if ($('#chkbChangeInstanceWhenOutStockEdit').is(':checked')) {
				changeInstanceWhenOutStockEdit = 'true';
			}

			productMarkCodeEdit = $('#cboProductMarkCodeEdit').val();
			statusEdit = $('#cboStatusEdit').val();
			$('[data-groupuseredit="TRUE"]:checked').each(function () {
				arrGroupsEdit += $(this).val() + ",";
			});
			if (arrGroupsEdit != null && arrGroupsEdit.length > 0) {
				arrGroupsEdit = arrGroupsEdit.substring(0, arrGroupsEdit.length - 1);
			}

			if (fullNameEdit === "") {
				$('#txtFullNameEdit').focus().val('');
				showError('Họ tên không được để trống!');
				return false;
			}

			if (dateOfBirthEdit === "" || dateOfBirthEdit === window.maskDateTime_N0) {
				$('#txtDateOfBirthEdit').focus();
				showError('Ngày sinh không được để trống');
				return false;
			} else if (isValidDate_N0(dateOfBirthEdit) === false) {
				$('#txtDateOfBirthEdit').focus();
				showError('Ngày sinh không đúng định dạng (dd/mm/yyyy)!');
				return false;
			}

			if (emailEdit === "") {
				$('#txtEmailEdit').focus().val('');
				showError('Email không được để trống!');
				return false;
			} else if (!IsvalidEmail(emailEdit)) {
				$('#txtEmailEdit').focus();
				showError('Email không đúng định dạng!');
				return false;
			}

			if (phoneEdit === "") {
				$('#txtPhoneEdit').focus().val('');
				showError('Điện thoại không được để trống!');
				return false;
			}

			if (productMarkCodeEdit == null || productMarkCodeEdit === "") {
				$('#cboProductMarkCodeEdit').multipleSelect('focus');
				showError('Hãng không được để trống!');
				return false;
			}
			if (deparmentEdit == null || deparmentEdit === "") {
				$('#cboDepartmentEdit').multipleSelect('focus');
				showError('Phòng ban không được để trống!');
				return false;
			}
			if (positionEdit == null || positionEdit === "") {
				$('#cboPositionEdit').multipleSelect('focus');
				showError('Chức vụ không được để trống!');
				return false;
			}
			if (branchEdit == null || branchEdit === "") {
				$('#cboBranchEdit').multipleSelect('focus');
				showError('Chi nhánh không được để trống!');
				return false;
			}
			if (wareHouseEdit == null || wareHouseEdit === "") {
				$('#cboWareHouseEdit').multipleSelect('focus');
				showError('Kho không được để trống!');
				return false;
			}
			
			return true;
		}

		function collectDataToEditUser(formData) {
			formData.append('userInfo.Id', userIdEdit);
			formData.append('userInfo.FullName', fullNameEdit);
			formData.append('userInfo.DateOfBirth', dateOfBirthEdit);
			formData.append('userInfo.Sex', sexEdit);
			formData.append('userInfo.Email', emailEdit);
			formData.append('userInfo.Phone', phoneEdit);
			formData.append('userInfo.DepartmentId', deparmentEdit);
			formData.append('userInfo.PositionId', positionEdit);
			formData.append('userInfo.BranchId', branchEdit);
			formData.append('userInfo.WareHouseId', wareHouseEdit);
			formData.append('userInfo.UnitPriceType', unitPriceTypeEdit);
			formData.append('userInfo.ViewOtherBranch', viewOtherBranchEdit);
			formData.append('userInfo.SeeProductTypeS', seeProductTypeSEdit);
			formData.append('userInfo.ChangeInstanceWhenOutStock', changeInstanceWhenOutStockEdit);
			formData.append('userInfo.ProductMarkCode', productMarkCodeEdit);
			formData.append('userInfo.Status', statusEdit);
			formData.append('arrGroupId', arrGroupsEdit);
		}
	</script>
}
catch (Exception)
{
	// ignored
}