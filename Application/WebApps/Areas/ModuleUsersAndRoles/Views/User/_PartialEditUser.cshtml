@*@using BussinessFacade.ModuleCommonCatalogData*@
@using BussinessFacade.ModuleMemoryData
@using BussinessFacade.ModuleUsersAndRoles
@using Common.CommonData
@using Common.Extensions
@model ObjectInfos.UserInfo
@{

    ViewBag.Title = "Sửa Thông tin người dùng";
    Layout = "~/ViewsShared/_Layout.cshtml";

    int _groupId = 0;
    if (Model.GroupSelectedCollection.Count > 0)
    {
        _groupId = Model.GroupSelectedCollection[0];
    }
}

<style>
    /*độ rộng tên cột title từng trang là khác nhau nên khai báo ở trang đó luôn*/
    .div-search-title > div {
        width: 145px;
    }
</style>

<div class="divCover">
    <div class="d-nav">
        <img src="~/Content/icons/Body-icon-home.png" /> I
        <a href="/home">Home</a>
        <span class="red">></span>
        <a href="/quan-tri-he-thong/quan-ly-nguoi-dung">Quản lý người dùng</a>
    </div>
</div>
<div class="divCover">
    <div class="classLine">
    </div>
</div>

@*Notify*@
<div class="divCover">
    @Html.Partial("~/Areas/Home/Views/Shared/_Partial_Quick_Notify.cshtml")
</div>


<div class="d-main">
    <div class="divCover">
        <div class="classTitle">
            <div class="div-title-content">SỬA THÔNG TIN NGƯỜI DÙNG</div>
        </div>
    </div>

    <div class="divCover">

        <div class="div-search-ad">
            <div class="div-search-title">
                <div>Tên đăng nhập<i class="redspan">(*)</i></div>
            </div>
            <div class="div-search-content">
                <div>
                    @Html.TextBoxFor(m => m.Username, new { @id = "txtUsername", maxlength = "64", @style = "width:200px;", })
                </div>
            </div>

            <div class="div-search-title">
                <div>Họ tên<i class="redspan">(*)</i></div>
            </div>
            <div class="div-search-content">
                <div>
                    @Html.TextBoxFor(m => m.FullName, new { @id = "txtFullName", maxlength = "250" })
                </div>
            </div>
        </div>

        <div class="div-search-ad">
            <div class="div-search-title">
                <div>Nhóm quyền</div>
            </div>
            <div class="div-search-content">
                <div>
                    <select id="cboGroupUser">
                        <option value="-1">None</option>
                        @foreach (var item in MemoryData.GetAllGroup())
                        {
                            if (item.Id == _groupId)
                            {
                                <option selected="selected" value="@item.Id">@item.Name</option>
                            }
                            else
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        }
                    </select>

                </div>
            </div>
        </div>

        <div class="divCover cls_form_title">
            <img src="/Content/icons/icon_info_24.png" />
            <div class="cls_form_header">
                Thông tin khác
            </div>
        </div>

        <div class="div-search-ad">
            <div class="div-search-title">
                <div>Số điện thoại<i class="redspan">(*)</i></div>
            </div>
            <div class="div-search-content">
                <div>
                    @Html.TextBoxFor(m => m.Phone, new { @style = "width:200px;", @id = "txtPhone", @maxlength = "16", @onkeypress = "isNumberKey()", @onkeyup = "isNumberKey()" })
                </div>
            </div>

            <div class="div-search-title">
                <div>Fax </div>
            </div>
            <div class="div-search-content">
                <div>
                    @Html.TextBoxFor(m => m.Fax, new { @maxlength = "50", @id = "txtfax" })
                </div>
            </div>
        </div>

        <div class="div-search-ad">
            <div class="div-search-title">
                <div>Email<i class="redspan">(*)</i></div>
            </div>
            <div class="div-search-content">
                <div>
                    @Html.TextBoxFor(m => m.Email, new { @id = "txtEmail", @maxlength = "250", @style = "width:200px;" })
                </div>
            </div>
            <div class="div-search-title">
                <div>Face </div>
            </div>
            <div class="div-search-content">
                <div>
                    @Html.TextBoxFor(m => m.Face_Link, new { @id = "txtface_link", @maxlength = "200" })
                </div>
            </div>
        </div>

        <div class="div-search-ad">
            <div class="div-search-title">
                <div>Linkedin</div>
            </div>
            <div class="div-search-content">
                <div>
                    @Html.TextBoxFor(m => m.Linkedin_Link, new { @id = "txtlinkedin", @maxlength = "200", @style = "width: 200px" })
                </div>
            </div>
            <div class="div-search-title">
                <div>Wechat</div>
            </div>
            <div class="div-search-content">
                <div>
                    @Html.TextBoxFor(m => m.Wechat_Link, new { @id = "txtwechat_link", @maxlength = "200" })
                </div>
            </div>
        </div>

        <div class="div-search-ad">
            <div class="div-search-title">
                <div>Other link</div>
            </div>
            <div class="div-search-content">
                <div>
                    @Html.TextBoxFor(m => m.Other_Link, new { @id = "txtOther_Link", @maxlength = "200" })
                </div>
            </div>
        </div>

        <div class="div-search-ad">
            <div class="div-search-title">
                <div>Quốc tịch <i class="redspan">(*)</i></div>
            </div>
            <div class="div-search-content">
                <div>
                    <select id="cboCountry">
                        @foreach (var item in MemoryData.c_lst_Country)
                        {
                            if (item.Country_Id == Model.Country)
                            {
                                <option selected="selected" value="@item.Country_Id">@item.Name</option>
                            }
                            else
                            {
                                <option value="@item.Country_Id">@item.Name</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>

        <div class="div-search-ad">
            <div class="div-search-title">
                <div>Địa chỉ<i class="redspan">(*)</i></div>
            </div>
            <div class="div-search-content">
                <div>
                    @Html.TextBoxFor(m => m.Address, new { @id = "txtAddress", maxlength = "200" })
                </div>
            </div>
        </div>

        <div class="div-search-ad">
            <div class="div-search-title">
                <div>Ngày sinh</div>
            </div>
            <div class="div-search-content">
                <div>
                    @Html.TextBoxFor(m => m.DateOfBirth, new
                    {
                        @id = "txtDateOfBirth",
                        @Value = Model.DateOfBirth == DateTime.MinValue ? "" : Model.DateOfBirth.ToString("dd/MM/yyyy"),
                        @class= "datetimepicker",
                        @style="width:200px;"
                    })
                </div>
            </div>

            <div class="div-search-title">
                <div>Giới tính<i class="redspan">(*)</i></div>
            </div>
            <div class="div-search-content">
                <div>
                    <select id="cboSex">
                        @foreach (var item in AllCodeBL.GetAllCodeByCdName(AllCodeCdName.SexType))
                        {
                            <option @(item.CdVal == Model.Sex ? "selected=\"selected\"" : "") value="@item.CdVal">@item.Content</option>
                        }
                    </select>
                </div>
            </div>
        </div>

        <div class="div-search-ad">
            <div class="div-search-title">
                <div>Loại người dùng<i class="redspan">(*)</i></div>
            </div>
            <div class="div-search-content">
                <div>
                    @Html.TextBoxFor(m => m.Type_Name, new { @style = "width: 200px", @disabled = "disabled" })
                </div>
            </div>
            <div class="div-search-title">
                <div>Trạng thái </div>
            </div>
            <div class="div-search-content">
                <div>
                    <select id="cboStatus">
                        @foreach (var item in AllCodeBL.GetAllCodeByCdName(AllCodeCdName.UserStatus))
                        {
                            <option @(item.CdVal == Model.Status.ToString() ? "selected=\"selected\"" : "") value="@item.CdVal">@item.Content</option>
                        }
                    </select>
                </div>
            </div>
        </div>


        @if (Model.Type == Convert.ToInt16(Common.CommonData.CommonEnums.UserType.Customer))
        {
            <div class="div-search-ad" id="clsCustomer">
                <div class="div-search-title">
                    <div>Tên công ty <i class="redspan">(*)</i></div>
                </div>
                <div class="div-search-content">
                    <div>
                        @Html.TextBoxFor(m => m.Company_Name, new { @id = "txtcompany_name", @maxlength = "500", @style = "width: 200px" })
                    </div>
                </div>

                <div class="div-search-title">
                    <div>Ngành ngề chính  <i class="redspan">(*)</i></div>
                </div>
                <div class="div-search-content">
                    <div>
                        @Html.TextBoxFor(m => m.Main_Business, new { @id = "txtmain_business", @maxlength = "500" })
                    </div>
                </div>
            </div>

            <div class="div-search-ad" id="clsCustomer1">
                <div class="div-search-title">
                    <div>Người quản lý</div>
                </div>
                <div class="div-search-content">
                    <div>
                        @Html.TextBoxFor(m => m.Copyto, new { @id = "txtcopyto", @maxlength = "200", @style = "width: 200px" })
                    </div>
                </div>

                <div class="div-search-title">
                    <div>Chức vụ </div>
                </div>
                <div class="div-search-content">
                    <div>
                        @Html.TextBoxFor(m => m.Title, new { @id = "txttitle", @maxlength = "500" })
                    </div>
                </div>
            </div>

            <div class="div-search-ad" id="clsCustomer1">
                <div class="div-search-title">
                    <div>Mã đại diện</div>
                </div>
                <div class="div-search-content">
                    <div>
                        @Html.TextBoxFor(m => m.Customer_Code, new { @id = "txtCustomer_Code", @maxlength = "200", @style = "width: 200px" })
                    </div>
                </div>

                <div class="div-search-title">
                    <div>Contact_Person </div>
                </div>
                <div class="div-search-content">
                    <div>
                        <select id="cboContact_Person">
                            @if (Model.Contact_Person == "Mr")
                            {
                                <option value="Mr" selected="selected">Mr</option>
                            }
                            else
                            {
                                <option value="Mr">Mr</option>
                            }

                            @if (Model.Contact_Person == "Mrs")
                            {
                                <option value="Mrs" selected="selected">Mrs</option>
                            }
                            else
                            {
                                <option value="Mrs">Mrs</option>
                            }

                            @if (Model.Contact_Person == "Ms")
                            {
                                <option value="Ms" selected="selected">Ms</option>
                            }
                            else
                            {
                                <option value="Ms">Ms</option>
                            }

                            @if (Model.Contact_Person == "Miss")
                            {
                                <option value="Miss" selected="selected">Miss</option>
                            }
                            else
                            {
                                <option value="Miss">Miss</option>
                            }
                        </select>
                    </div>
                </div>
            </div>

            <div class="div-search-ad" id="clsCustomer2">
                <div class="div-search-title">
                    <div>Lý do dùng </div>
                </div>
                <div class="div-search-content">
                    <div>
                        <select id="cboReasonSelect" style="width: 200px">
                            @foreach (var item in MemoryData.AllCode_GetBy_CdTypeCdName("USER", "REASON_SELECT"))
                            {
                                <option @(item.CdVal == Model.Reason_Select.ToString() ? "selected=\"selected\"" : "") value="@item.CdVal">@item.Content</option>
                            }
                        </select>
                    </div>
                </div>

                <div class="div-search-title">
                    <div>Chính sách giá đặc biệt </div>
                </div>
                <div class="div-search-content">
                    <div>
                        <select id="cboRequestCredit">
                            @foreach (var item in MemoryData.AllCode_GetBy_CdTypeCdName("USER", "REQUEST_CREDIT"))
                            {
                                <option @(item.CdVal == Model.Request_Credit.ToString() ? "selected=\"selected\"" : "") value="@item.CdVal">@item.Content</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
        }
        else if (Model.Type == Convert.ToInt16(Common.CommonData.CommonEnums.UserType.Lawer))
        {
            <div class="div-search-ad" id="clsLawer">
                <div class="div-search-title">
                    <div>Loại luật sư <i class="redspan">(*)</i></div>
                </div>
                <div class="div-search-content">
                    <div>
                        <select id="cboLawerType" style="width:200px">
                            @foreach (var item in MemoryData.AllCode_GetBy_CdTypeCdName("USER", "LAWER_TYPE"))
                            {
                                <option @(item.CdVal == Model.Other_Type.ToString() ? "selected=\"selected\"" : "") value="@item.CdVal">@item.Content</option>
                            }
                        </select>
                    </div>
                </div>

                <div class="div-search-title">
                    <div>Số tiền / 1 giờ (VNĐ) <i class="redspan">(*)</i></div>
                </div>
                <div class="div-search-content">
                    <div>
                        @Html.TextBoxFor(m => m.Hourly_Rate, new { @id = "txthourly_rate", @Value = Model.Hourly_Rate == 0 ? "" : Model.Hourly_Rate.ToString("#,##0.##"), @onkeyup = "jsFormatNumber(this.value, this.id)" })
                    </div>
                </div>

                <div class="div-search-title">
                    <div>Số tiền / 1 giờ (USD) <i class="redspan">(*)</i></div>
                </div>
                <div class="div-search-content">
                    <div>
                        @Html.TextBoxFor(m => m.Hourly_Rate_USD, new { @id = "txthourly_rate_usd", @Value = Model.Hourly_Rate_USD == 0 ? "" : Model.Hourly_Rate_USD.ToString("#,##0.##"), @onkeyup = "jsFormatNumber(this.value, this.id)" })
                    </div>
                </div>
            </div>
        }


    </div>

    <div class="form-group">
        <div class="form-group-bottom">
            <input type="submit" class="btn-default" value="Lưu" onclick="return doUser()" />
            <input type="submit" class="btn-default" value="Thoát" onclick="return back()" />
        </div>
    </div>
</div>

<script>
	var userId = '@Model.Id',
		username = '',
		fullName = '',
		password = '',
		rePassword = '',
		dateOfBirth = '@Model.DateOfBirth.ToDateStringN0()',
		sex = '',
		email = '',
		phone = '',
		status = '',
		GroupId = '';
	$(document).ready(function () {
		$.datetimepicker.setLocale('vi');
		$('.datetimepicker').datetimepicker({
			timepicker: false,
			format: 'd/m/Y',
			//formatTime: 'H:i',
			formatDate: 'd/m/Y',
			mask: '39/19/9999',
			validateOnBlur: false,
			scrollInput: false
		});

		$('#txtDateOfBirth').datetimepicker({ value: dateOfBirth });
    });

    function back() {
        var url = "/quan-tri-he-thong/quan-ly-nguoi-dung/";
        window.location.href = url;
    }

	function doUser() {
		if (validateFormUser()) {
			var formData = new FormData();
			collectDataToUser(formData);
			$.ajax({
                url: '/quan-tri-he-thong/quan-ly-nguoi-dung/do-edit-user',
				type: 'POST',
				data: formData,
				processData: false,
				contentType: false,
				traditional: true,
				async: true,
                headers: { "cache-control": "no-cache" },
                beforeSend: function () {
                    CreateRollingWaitingIcon(true);
                },
                success: function (data) {
                    CreateRollingWaitingIcon(false);
					if (data != null) {
						if (onResponse(data)) {
                            var url = "/quan-tri-he-thong/quan-ly-nguoi-dung/";
                            window.location.href = url;
						}
					}
				},
				error: function (e) {
					console.log(e);
				}
			});
		}
	}

	function validateFormUser() {
		fullName = $('#txtFullName').val().trim();
		dateOfBirth = $('#txtDateOfBirth').val().trim();
		sex = $('#cboSex').val();
		email = $('#txtEmail').val().trim();
		phone = $('#txtPhone').val().trim();
		//type = $('#cboType').val();
		status = $('#cboStatus').val();
		GroupId = $('#cboGroupUser').val();

		if (fullName === "") {
            jError("Họ tên không được để trống!", "lỗi", function () {
                $('#txtFullName').focus();
            });
            return false;
        }

        //if ($("#txtAddress").val() === "") {
        //    jError("Địa chỉ không được để trống!", "lỗi", function () {
        //        $('#txtAddress').val('');
        //        $('#txtAddress').focus();
        //    });
        //    return false;
        //}

        if (dateOfBirth != "" && dateOfBirth != window.maskDateTime_N0 && isValidDate_N0(dateOfBirth) === false) {
            jError("Ngày sinh không đúng định dạng (dd/mm/yyyy)!", "lỗi", function () {
                $('#txtDateOfBirth').focus();
            });
            return false;
        }

        if (phone === "") {
            jError("Điện thoại không được để trống!", "lỗi", function () {
                $('#txtPhone').val('');
                $('#txtPhone').focus();
            });
            return false;
        }

        if (email === "") {
            jError("Email không được để trống!", "lỗi", function () {
                $('#txtEmail').focus();
            });
            return false;
        } else if (!IsvalidEmail(email)) {
            jError("Email không đúng định dạng!", "lỗi", function () {
                $('#txtEmail').focus();
            });
            return false;
        }

        var _cboCountry = $("#cboCountry").val();
        if (_cboCountry == null) {
            jError("Quốc tịch không được bỏ trống!", "lỗi", function () {
                $('#cboCountry').multipleSelect('focus');
            });
            return false;
        }

        if (@Model.Type == '@Convert.ToInt16(Common.CommonData.CommonEnums.UserType.Customer)') {
            var _txtcompany_name = $("#txtcompany_name").val();
            if (_txtcompany_name == null || _txtcompany_name == "") {
                jError("Tên công ty khách hàng không được bỏ trống!", "lỗi", function () {
                    $('#_txtcompany_name').focus();
                });
                return false;
            }

            var _txtmain_business = $("#txtmain_business").val();
            if (txtmain_business == null || txtmain_business == "") {
                jError("Ngành ngề chín không được bỏ trống!", "lỗi", function () {
                    $('#txtmain_business').focus();
                });
                return false;
            }

        } else if (@Model.Type == '@Convert.ToInt16(Common.CommonData.CommonEnums.UserType.Lawer)') {
            var _cboLawerType =  $("#cboLawerType").val();
            if (_cboLawerType == null) {
                jError("Loại luật sư không được bỏ trống!", "lỗi", function () {
                    $('#cboLawerType').focus();
                });
                return false;
            }

            var _txthourly_rate = $("#txthourly_rate").val();
            if (_txthourly_rate == null || _txthourly_rate == "") {
                jError("Số tiền / 1 giờ (VNĐ) không được bỏ trống!", "lỗi", function () {
                    $('#txthourly_rate').focus();
                });
                return false;
            }

            if (_txthourly_rate == "0") {
                jError("Số tiền / 1 giờ (VNĐ) phải lớn hơn 0!", "lỗi", function () {
                    $("#txthourly_rate").val('');
                    $("#txthourly_rate").focus();
                });
                return false;
            }

            var _txthourly_rate_usd = $("#txthourly_rate_usd").val();
            if (_txthourly_rate_usd == null || _txthourly_rate_usd == "") {
                jError("Số tiền / 1 giờ (USD) không được bỏ trống!", "lỗi", function () {
                    $('#txthourly_rate_usd').focus();
                });
                return false;
            }

            if (_txthourly_rate_usd == "0") {
                jError("Số tiền / 1 giờ (USD) phải lớn hơn 0!", "lỗi", function () {
                    $("#txthourly_rate_usd").val('');
                    $("#txthourly_rate_usd").focus();
                });
                return false;
            }
        }

        if (GroupId == "-1") {
            jError("Loại người dùng không được để trống!", "lỗi", function () {
                $("#cboGroupUser").focus();
            });
            return false;
        }

        return true;
    }

	function collectDataToUser(formData) {
		formData.append('userInfo.Id', userId);
        formData.append('userInfo.FullName', fullName);
        formData.append('userInfo.Address', $("#txtAddress").val());

        if (dateOfBirth != "") {
            formData.append('userInfo.DateOfBirth', dateOfBirth);
        }

		formData.append('userInfo.Sex', sex);
		formData.append('userInfo.Email', email);
        formData.append('userInfo.Phone', phone);
        formData.append('userInfo.Fax', $("#txtfax").val());
        formData.append('userInfo.Type', @Model.Type);
        formData.append('userInfo.Status', status);

        formData.append('userInfo.Country', $("#cboCountry").val());
        formData.append('userInfo.Face_Link', $("#txtface_link").val());
        formData.append('userInfo.Linkedin_Link', $("#txtlinkedin").val());
        formData.append('userInfo.Wechat_Link', $("#txtwechat_link").val());
        formData.append('userInfo.Other_Link', $("#txtOther_Link").val());

        if (@Model.Type == '@Convert.ToInt16(Common.CommonData.CommonEnums.UserType.Customer)') {

            formData.append('userInfo.Company_Name', $("#txtcompany_name").val());
            formData.append('userInfo.Main_Business', $("#txtmain_business").val());
            formData.append('userInfo.Title', $("#txttitle").val());
            formData.append('userInfo.Copyto', $("#txtcopyto").val());

            formData.append('userInfo.Reason_Select', $("#cboReasonSelect").val());
            formData.append('userInfo.Request_Credit', $("#cboRequestCredit").val());

            formData.append('userInfo.Customer_Code', $("#txtCustomer_Code").val());
            formData.append('userInfo.Contact_Person', $("#cboContact_Person").val());

        }
        else if (@Model.Type == '@Convert.ToInt16(Common.CommonData.CommonEnums.UserType.Lawer)') {
            formData.append('userInfo.Other_Type', $("#cboLawerType").val());
            formData.append('userInfo.Hourly_Rate', $("#txthourly_rate").val().replace(/,/g, ""));
            formData.append('userInfo.Hourly_Rate_USD', $("#txthourly_rate_usd").val().replace(/,/g, ""));
        }

		formData.append('GroupId', GroupId);
	}
</script>
