@using BussinessFacade  
@using CommonData
@{
	ViewBag.Title = "Quản lý người dùng";
	Layout = "~/ViewsShared/_Layout.cshtml";
}
@try
{
	<input type="hidden" value="LastTimeUpdated" id="colSorted" />
	<input type="hidden" value="DESC" id="SortType" />
	<input type="hidden" value="" id="OptionSorting" />

	<div class="d-popup-container" id="dpop-users"></div>

	<div class="d-nav-container">
		<ul class="ul-nav">
			<li><a href="javascript:;">Quản trị hệ thống</a></li>
			<li><a href="/quan-tri-he-thong/quan-ly-nguoi-dung">Quản lý người dùng</a></li>
		</ul>
	</div>

	<div class="title-section-content">
		<p class="font-size-15 text-font-medium">Danh sách người dùng</p>
	</div>

	<div class="action">
		<input class="btn" type="button" value="Thêm mới người dùng" onclick="getViewToAddNewUser()" />
	</div>

	<div class="div-search grid-3cols">
		<div class="item-search">
			<label class="title-condition">Tên đăng nhập</label>
			<input class="control-condition" data-controlcondition="TRUE" type="text" id="txtUsernameSearch" />
		</div>
		<div class="item-search">
			<label class="title-condition">Họ tên</label>
			<input class="control-condition" data-controlcondition="TRUE" type="text" id="txtFullNameSearch" />
		</div>
		<div class="item-search">
			<label class="title-condition">Phòng ban</label>
			<select data-controlcondition="TRUE" id="cboDepartmentSearch">
				<option value="" selected="selected">None</option>
			</select>
		</div>
		<div class="item-search">
			<label class="title-condition">Chức vụ</label>
			<select data-controlcondition="TRUE" id="cboPositionSearch">
				<option value="" selected="selected">None</option>
			</select>
		</div>
		<div class="item-search">
			<label class="title-condition">Chi nhánh</label>
			<select data-controlcondition="TRUE" id="cboBranchSearch">
				<option value="" selected="selected">None</option>
			</select>
		</div>
		<div class="item-search">
			<label class="title-condition">Kho</label>
			<select data-controlcondition="TRUE" id="cboWareHouseSearch">
				<option value="" selected="selected">None</option>
			</select>
		</div>

		<div class="item-search">
			<label class="title-condition">Nhóm quyền trong hệ thống</label>
			<select data-controlcondition="TRUE" id="cboGroupSearch">
				<option value="" selected="selected">None</option>
				@foreach (var item in GroupUserBL.GetAllGroups())
				{
					<option value="@item.Id">@item.Name</option>
				}
			</select>
		</div>
		<div class="item-search">
			<label class="title-condition">Trạng thái</label>
			<select data-controlcondition="TRUE" id="cboStatusSearch">
				<option value="">Tất cả</option>
				@foreach (var item in AllCodeBL.GetAllCodeByCdName(AllCodeCdName.UserStatus))
				{
					<option value="@item.CdVal">@item.Content</option>
				}
			</select>
		</div>

		<div class="item-search">
			<input id="btnFindUsers" data-controlcondition="TRUE" type="button" class="btn btn-seach" value="Tìm kiếm" onclick="findUsers(1, 1)" />
		</div>
	</div>

	<div id="divTableUsers">
		@Html.Partial("_PartialTableListUsers")
	</div>

	<script>
		$(document).ready(function () {
			$('txtUsernameSearch').focus();
			$('[data-controlcondition="TRUE"]').on('keypress',
				function (e) {
					enterKeyPress(e, 'btnFindUsers');
				});

			window.__seasionstorage_keySearch = '@SessionStorages.SEARCH_USER_KEY_CONDITIONS';
			window.__seasionstorage_optionFilter = '@SessionStorages.SEARCH_USER_KEY_OPTIONS';
			var username = '', fullName = '', department = '', position = '', branch = '', warehouse = '', group = '', status = '';

			window.colSort = 'LastTimeUpdated';
			window.sortType = 'DESC';
			window.pageNumber = 1;
			window.recordPerPage = window.defaultRecordPerPage;
			updateFilterOption();
			window.keySearch = username + "|" + fullName + "|" + department + "|" + position + "|" + branch + "|" + warehouse + "|" + group + "|" + status;
			initSessionStorage(findUsers);
			bindColumnSortWithSearching(findUsers);
			if (!pageContainDataOfSearching()) {
				ChangeIConSortWhenSortColumns();
			}

			$('#cboDepartmentSearch').multipleSelect({
				filter: true,
				single: true,
				isdatastring: false,
				maxHeight: 150
			});
			$('#cboPositionSearch').multipleSelect({
				filter: true,
				single: true,
				isdatastring: false,
				maxHeight: 150
			});
			$('#cboBranchSearch').multipleSelect({
				filter: true,
				single: true,
				isdatastring: false,
				maxHeight: 150
			});
			$('#cboWareHouseSearch').multipleSelect({
				filter: true,
				single: true,
				isdatastring: false,
				maxHeight: 150
			});
			$('#cboGroupSearch').multipleSelect({
				filter: true,
				single: true,
				isdatastring: false,
				maxHeight: 150
			});
			$('#cboStatusSearch').multipleSelect({
				filter: true,
				single: true,
				isdatastring: false,
				maxHeight: 150
			});
		});

		function findUsers(_pageNumber, _isSearching) {
			window.__seasionstorage_keySearch = '@SessionStorages.SEARCH_USER_KEY_CONDITIONS';
			window.__seasionstorage_optionFilter = '@SessionStorages.SEARCH_USER_KEY_OPTIONS';
			window.keySearch = sessionStorage.getItem(window.__seasionstorage_keySearch);
			window.optionFilter = sessionStorage.getItem(window.__seasionstorage_optionFilter);
			window.pageNumber = _pageNumber;
			window.isSearching = _isSearching;
			var username = '', fullName = '', department = '', position = '', branch = '', warehouse = '', group = '', status = '';
			if (isSearching === 1) {
				window.pageNumber = 1;
				username = $("#txtUsernameSearch").val().trim();
				fullName = $("#txtFullNameSearch").val().trim();
				department = $("#cboDepartmentSearch").val();
				position = $("#cboPositionSearch").val();
				branch = $("#cboBranchSearch").val();
				warehouse = $("#cboWareHouseSearch").val();
				group = $("#cboGroupSearch").val();
				status = $("#cboStatusSearch").val();
				setOptionFilter();
				window.recordPerPage = $("#divNumberRecordOnPageListUsers").val();
			} else {
				window.arrKeySearch = window.keySearch.split('|');
				window.arrOptionFilter = window.optionFilter.split('|');
				username = arrKeySearch[0];
				fullName = arrKeySearch[1];
				department = arrKeySearch[2];
				position = arrKeySearch[3];
				branch = arrKeySearch[4];
				warehouse = arrKeySearch[5];
				group = arrKeySearch[6];
				status = arrKeySearch[7];
				$("#txtUsernameSearch").val(username);
				$("#txtFullNameSearch").val(fullName);
				$("#cboDepartmentSearch").val(department);
				$("#cboPositionSearch").val(position);
				$("#cboBranchSearch").val(branch);
				$("#cboWareHouseSearch").val(warehouse);
				$("#cboGroupSearch").val(group);
				$("#cboStatusSearch").val(status);
				if (pageNumber === -1) {
					window.colSort = arrOptionFilter[0];
					window.sortType = arrOptionFilter[1];
					window.optionSorting = arrOptionFilter[2];
					window.pageNumber = arrOptionFilter[3];
					window.recordPerPage = arrOptionFilter[4];
					setOptionFilter();
					$("#divNumberRecordOnPageListUsers").val(recordPerPage);
				} else {
					setOptionFilter();
					window.recordPerPage = $("#divNumberRecordOnPageListUsers").val();
				}
			}

			window.keySearch = username + "|" + fullName + "|" + department + "|" + position + "|" + branch + "|" + warehouse + "|" + group + "|" + status;
			sessionStorage.setItem(__seasionstorage_keySearch, keySearch);
			updateFilterOption();
			sessionStorage.setItem(__seasionstorage_optionFilter, optionFilter);

			$.ajax({
				type: "POST",
				headers: { "cache-control": "no-cache" },
				url: "/quan-tri-he-thong/quan-ly-nguoi-dung/find-user",
				data: {
					keysSearch: keySearch,
					options: optionFilter
				},
				async: false,
				success: function (data) {
					if (data != null) {
						if (onResponse(data)) {
							$("#divTableUsers").html(data);
							ChangeIConSortWhenSortColumns();
							bindColumnSortWithSearching(findUsers);
						}
					}
				}
			});
			return true;
		}

		function pageListOfUsers(_pagenum) {
			try {
				findUsers(_pagenum, 0);

			} catch (e) {
				console.log(e.message);
			}
		}
	</script>

	@* task function *@
	<script>
	function getViewToAddNewUser() {
		$.ajax({
			type: "POST",
			url: "/quan-tri-he-thong/quan-ly-nguoi-dung/get-view-to-add-user",
			headers: { "cache-control": "no-cache" },
			async: false,
			success: function (data) {
				if (data != null) {
					if (onResponse(data)) {
						$("#dpop-users").html(data);
						ShowPopupDialog("dpop-users", "Thêm mới người dùng", 900, 0, "txtUsernameAdd");
					}
				}
				return false;
			}
		});
	}

	function getViewToEditUser(userId, username) {
		$.ajax({
			type: "POST",
			url: "/quan-tri-he-thong/quan-ly-nguoi-dung/get-view-to-edit-user",
			headers: { "cache-control": "no-cache" },
			data: { userId : userId },
			async: false,
			success: function (data) {
				if (data != null) {
					if (onResponse(data)) {
						$("#dpop-users").html(data);
						ShowPopupDialog("dpop-users", "Sửa người dùng: <span class='data-in-title-popup'>" + username + "</span>", 900, 0, "txtFullNameEdit");
					}
				}
				return false;
			}
		});
	}

	function doDeleteUser(userId, canDelete) {
		if (canDelete > 0) {
			showError("Không thể xóa người dùng đang hoạt động.");
			return false;
		} else {
			nvsConfirm(null, "Bạn có chắc chắn muốn xóa người dùng này không?", function () {
				$.ajax({
					url: "/quan-tri-he-thong/quan-ly-nguoi-dung/do-delete-user",
					type: "POST",
					data: { userId : userId },
					headers: { "cache-control": "no-cache" },
					async: false,
					success: function (data) {
						if (data != null) {
							if (onResponse(data)) {
								if (data["DeleteUserResult"]["isDeleteUserSuccess"]) {
									showSuccess(data["DeleteUserResult"]["message"]);
									ClosePopupDialog('dpop-users', true);
									findUsers(1, 0);
								} else {
									showError(data["DeleteUserResult"]["message"]);
								}
							}
						}
					},
					error: function (e) {
						console.log(e);
					}
				});

			});
		}
	}
	</script>
}
catch (Exception)
{
	// ignored
}