@using BussinessFacade
@using CommonData
@{
    ViewBag.Title = "Quản lý chức năng";
    Layout = "~/ViewsShared/_Layout.cshtml";
}

<input type="hidden" value="Id" id="colSorted" />
<input type="hidden" value="DESC" id="SortType" />
<input type="hidden" value="" id="OptionSorting" />

<div class="d-popup-container" id="dpop-functions"></div>

<div class="d-nav-container">
    <ul class="ul-nav">
        <li><a href="javascript:">Quản trị hệ thống</a></li>
        <li><a href="/quan-tri-he-thong/quan-ly-chuc-nang">Quản lý chức năng</a></li>
    </ul>
</div>

<div class="title-section-content">
    <p class="font-size-15 text-font-medium">Danh sách chức năng</p>
</div>

<div class="action">
    <input class="btn" type="button" value="Thêm mới chức năng" onclick="getViewToAddNewFunction()" />
</div>

<div class="div-search grid-3cols">
    <div class="item-search">
        <label class="title-condition">Function name</label>
        <input class="control-condition" data-controlcondition="TRUE" type="text" id="txtFunctionNameSearch" />
    </div>
    <div class="item-search">
        <label class="title-condition">Function type</label>
        <select data-controlcondition="TRUE" id="cboFunctionTypeSearch">
            <option value="" selected="selected">None</option>
            @foreach (var item in AllCodeBL.GetAllCodeByCdName(AllCodeCdName.FunctionType))
            {
                <option value="@item.CdVal">@item.Content</option>
            }
        </select>
    </div>
    <div class="item-search">
        <label class="title-condition">Href</label>
        <input data-controlcondition="TRUE" class="control-condition" type="text" id="txtHrefSearch" />
    </div>
    <div class="item-search">
        <label class="title-condition">Function parent</label>
        <select data-controlcondition="TRUE" id="cboParentFunctionSearch">
            <option value="" selected="selected">None</option>
            @foreach (var item in FunctionBL.GetAllFunctions().Where(o => o.FunctionType == (int)CommonEnums.FunctionType.Menu).OrderBy(t => t.FunctionName))
            {
                <option value="@item.Id">@item.FunctionName - Level @item.Lev</option>
            }
        </select>
    </div>
    <div class="item-search">
        <label class="title-condition">Level</label>
        <input data-controlcondition="TRUE" class="control-condition" type="text" id="txtLevelSearch" />
    </div>
    <div class="item-search">
        <input id="btnFindFunctions" data-controlcondition="TRUE" type="button" class="btn btn-seach" value="Tìm kiếm" onclick="findFunctions(1, 1)" />
    </div>
</div>

<div id="divTableFunctions">
    @Html.Partial("_PartialTableListFunctions")
</div>

<script>
	$(document).ready(function () {
		$('txtFunctionNameSearch').focus();
		$('[data-controlcondition="TRUE"]').on('keypress',
			function(e) {
				enterKeyPress(e, 'btnFindFunctions');
			});

		window.__seasionstorage_keySearch = '@SessionStorages.SEARCH_FUNCTION_KEY_CONDITIONS';
		window.__seasionstorage_optionFilter = '@SessionStorages.SEARCH_FUNCTION_KEY_OPTIONS';
		var functionName = '', functionType = window.multiSelectValue.NullValue, href = '', parentId = window.multiSelectValue.NullValue, level = '';

		window.colSort = 'Id';
		window.sortType = 'DESC';
		window.pageNumber = 1;
		window.recordPerPage = window.defaultRecordPerPage;
		updateFilterOption();
		window.keySearch = functionName + "|" + functionType + "|" + href + "|" + parentId + "|" + level;
		initSessionStorage(findFunctions);
		bindColumnSortWithSearching(findFunctions);
		if (!pageContainDataOfSearching()) {
			ChangeIConSortWhenSortColumns();
		}
		$('#cboFunctionTypeSearch').multipleSelect({
			filter: true,
			single: true,
			isdatastring: false,
			maxHeight: 150
		});
		$('#cboParentFunctionSearch').multipleSelect({
			filter: true,
			single: true,
			isdatastring: false,
			maxHeight: 150
		});
	});

	function findFunctions(_pageNumber, _isSearching) {
		window.__seasionstorage_keySearch = '@SessionStorages.SEARCH_FUNCTION_KEY_CONDITIONS';
		window.__seasionstorage_optionFilter = '@SessionStorages.SEARCH_FUNCTION_KEY_OPTIONS';
		window.keySearch = sessionStorage.getItem(window.__seasionstorage_keySearch);
		window.optionFilter = sessionStorage.getItem(window.__seasionstorage_optionFilter);
		window.pageNumber = _pageNumber;
		window.isSearching = _isSearching;
		var functionName = '', functionType = window.multiSelectValue.NullValue, href = '', parentId = window.multiSelectValue.NullValue, level = '';
		if (isSearching === 1) {
			window.pageNumber = 1;
			functionName = $("#txtFunctionNameSearch").val().trim();
			functionType = $("#cboFunctionTypeSearch").val();
			href = $("#txtHrefSearch").val().trim();
			parentId = $("#cboParentFunctionSearch").val();
			level = $('#txtLevelSearch').val().trim();
			setOptionFilter();
			window.recordPerPage = $("#divNumberRecordOnPageListFunctions").val();
		} else {
			window.arrKeySearch = window.keySearch.split('|');
			window.arrOptionFilter = window.optionFilter.split('|');
			functionName = arrKeySearch[0];
			functionType = arrKeySearch[1];
			href = arrKeySearch[2];
			parentId = arrKeySearch[3];
			level = arrKeySearch[4];
			$("#txtFunctionNameSearch").val(functionName);
			$("#cboFunctionTypeSearch").val(functionType);
			$("#txtHrefSearch").val(href);
			$("#cboParentFunctionSearch").val(parentId);
			$('#txtLevelSearch').val(level);
			if (pageNumber === -1) {
				window.colSort = arrOptionFilter[0];
				window.sortType = arrOptionFilter[1];
				window.optionSorting = arrOptionFilter[2];
				window.pageNumber = arrOptionFilter[3];
				window.recordPerPage = arrOptionFilter[4];
				setOptionFilter();
				$("#divNumberRecordOnPageListFunctions").val(recordPerPage);
			} else {
				setOptionFilter();
				window.recordPerPage = $("#divNumberRecordOnPageListFunctions").val();
			}
		}

		window.keySearch = functionName + "|" + functionType + "|" + href + "|" + parentId + "|" + level;
		sessionStorage.setItem(__seasionstorage_keySearch, keySearch);
		updateFilterOption();
		sessionStorage.setItem(__seasionstorage_optionFilter, optionFilter);

		$.ajax({
			type: "POST",
			headers: { "cache-control": "no-cache" },
			url: "/quan-tri-he-thong/quan-ly-chuc-nang/find-function",
			data: {
				keysSearch: keySearch,
				options: optionFilter
			},
			async: false,
			success: function (data) {
				if (data != null) {
					if(onResponse(data)) {
						$("#divTableFunctions").html(data);
						ChangeIConSortWhenSortColumns();
						bindColumnSortWithSearching(findFunctions);
					}
				}
			}
		});
		return true;
	}

	function pageListOfFunctions(_pagenum) {
		try {
			findFunctions(_pagenum, 0);

		} catch (e) {
			console.log(e.message);
		}
	}
</script>

@* task function *@
<script>
    function getViewToAddNewFunction() {
        $.ajax({
            type: "POST",
            url: "/quan-tri-he-thong/quan-ly-chuc-nang/get-view-to-add-function",
            headers: { "cache-control": "no-cache" },
            async: false,
            success: function (data) {
                if (data != null) {
                    if (onResponse(data)) {
                        $("#dpop-functions").html(data);
                        ShowPopupDialog("dpop-functions", "Thêm mới chức năng", 600, 0, "txtFunctionNameAdd");
                    }
                }
                return false;
            }
        });
    }

    function getViewToEditFunction(functionId) {
        $.ajax({
            type: "POST",
            url: "/quan-tri-he-thong/quan-ly-chuc-nang/get-view-to-edit-function",
            headers: { "cache-control": "no-cache" },
            data: { functionId: functionId },
            async: false,
            success: function (data) {
                if (data != null) {
                    if (onResponse(data)) {
                        $("#dpop-functions").html(data);
                        ShowPopupDialog("dpop-functions", "Sửa chức năng", 600, 0, "txtFunctionNameEdit");
                    }
                }
                return false;
            }
        });
    }

    function doDeleteFunction(functionId) {
        nvsConfirm(null, "Bạn có chắc chắn muốn xóa function này không?", function () {
            $.ajax({
                url: "/quan-tri-he-thong/quan-ly-chuc-nang/do-delete-function",
                type: "POST",
                data: { functionId: functionId },
                headers: { "cache-control": "no-cache" },
                async: false,
                success: function (data) {
                    if (data != null) {
                        if (onResponse(data)) {
                            if (data["DeleteFunctionResult"]["isDeleteFunctionSuccess"]) {
                                showSuccess(data["DeleteFunctionResult"]["message"]);
                                ClosePopupDialog('dpop-functions', true);
                                window.findFunctions(1, 0);
                            } else {
                                showError(data["DeleteFunctionResult"]["message"]);
                            }
                        }
                    }
                },
                error: function (e) {
                    console.log(e);
                }
            });

        });
    }

    function viewAllInnerFunction(functionId) {
        $.ajax({
            type: "POST",
            url: "/quan-tri-he-thong/quan-ly-chuc-nang/view-all-inner-function",
            headers: { "cache-control": "no-cache" },
            data: { functionId: functionId },
            async: false,
            success: function (data) {
                if (data != null) {
                    if (onResponse(data)) {
                        $("#dpop-functions").html(data);
                        ShowPopupDialog("dpop-functions", "Chức năng con", 600, 0, "");
                    }
                }
                return false;
            }
        });
    }
</script>
