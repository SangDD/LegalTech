@using BussinessFacade.ModuleMemoryData
@using BussinessFacade.ModuleUsersAndRoles
@using Common.CommonData;
@{
	ViewBag.Title = "Quản lý chức năng";
	Layout = "~/ViewsShared/_Layout.cshtml";
}

<input type="hidden" value="Id" id="colSorted" />
<input type="hidden" value="DESC" id="SortType" />
<input type="hidden" value="" id="OptionSorting" />

<div class="d-popup-container" id="dpop-functions"></div>

<div class="d-nav-container">
	<ul class="ul-nav">
		<li><a href="javascript:">Quản trị hệ thống</a></li>
		<li><a href="/quan-tri-he-thong/quan-ly-chuc-nang">Quản lý chức năng</a></li>
	</ul>
</div>

<div class="title-section-content">
	<p class="font-size-15 text-font-medium">Danh sách chức năng</p>
</div>

<div class="action">
	<input class="btn" type="button" value="Thêm mới chức năng" onclick="getViewToAddNewFunction()" />
</div>

<div class="div-search grid-3cols">
	<div class="item-search">
		<label class="title-condition">Function name</label>
		<input class="control-condition" data-controlcondition="TRUE" type="text" id="txtFunctionNameSearch"/>
	</div>
	<div class="item-search">
		<label class="title-condition">Function type</label>
		<select data-controlcondition="TRUE" id="cboFunctionTypeSearch">
			<option value="" selected="selected">None</option>
			@foreach (var item in AllCodeBL.GetAllCodeByCdName(AllCodeCdName.FunctionType))
			{
				<option value="@item.CdVal">@item.Content</option>
			}
		</select>
	</div>
	<div class="item-search">
		<label class="title-condition">Href</label>
		<input data-controlcondition="TRUE" class="control-condition" type="text" id="txtHrefSearch" />
	</div>
	<div class="item-search">
		<label class="title-condition">Function parent</label>
		<select data-controlcondition="TRUE" id="cboParentFunctionSearch">
			<option value="" selected="selected">None</option>
			@foreach (var item in FunctionBL.GetAllFunctions().Where(o => o.FunctionType == (int)CommonEnums.FunctionType.Menu).OrderBy(t => t.FunctionName))
			{
				<option value="@item.Id">@item.FunctionName - Level @item.Lev</option>
			}
		</select>
	</div>
	<div class="item-search">
		<label class="title-condition">Level</label>
		<input data-controlcondition="TRUE" class="control-condition" type="text" id="txtLevelSearch" />
	</div>
	<div class="item-search">
		<input id="btnFindFunctions" data-controlcondition="TRUE" type="button" class="btn btn-seach" value="Tìm kiếm" onclick="findFunctions(1, 1)" />
	</div>
</div>

<div id="divTableFunctions">
	@Html.Partial("_PartialTableListFunctions")
</div>

<script>
	var _currentKeySearch = '@SessionStorages.SEARCH_FUNCTION_KEY_CONDITIONS';
	var _currentOptionFilter = '@SessionStorages.SEARCH_FUNCTION_KEY_OPTIONS';

	var functionName = '', functionType = window.multiSelectValue.NullValue, href = '', parentId = window.multiSelectValue.NullValue, level = '';

	$(document).ready(function () {
		initAllSearchingData(_currentKeySearch, _currentOptionFilter, initOrderBySearching, setKeySearch, findFunctions);

		$('txtFunctionNameSearch').focus();
		$('[data-controlcondition="TRUE"]').on('keypress',
			function(e) {
				enterKeyPress(e, 'btnFindFunctions');
			});

		$('#cboFunctionTypeSearch').multipleSelect({
			filter: true,
			single: true,
			isdatastring: false,
			maxHeight: 150
		});
		$('#cboParentFunctionSearch').multipleSelect({
			filter: true,
			single: true,
			isdatastring: false,
			maxHeight: 150
		});
	});

	function findFunctions(_pageNumber, _isSearching) {
		reinitSearchingConditions(_currentKeySearch, _currentOptionFilter, _pageNumber, _isSearching);
		if (isSearching === 1) {
			functionName = $("#txtFunctionNameSearch").val().trim();
			functionType = $("#cboFunctionTypeSearch").val();
			href = $("#txtHrefSearch").val().trim();
			parentId = $("#cboParentFunctionSearch").val();
			level = $('#txtLevelSearch').val().trim();
		} else {
			window.arrKeySearch = window.keySearch.split('|');
			functionName = arrKeySearch[0];
			functionType = arrKeySearch[1];
			href = arrKeySearch[2];
			parentId = arrKeySearch[3];
			level = arrKeySearch[4];
			$("#txtFunctionNameSearch").val(functionName);
			$("#cboFunctionTypeSearch").val(functionType);
			$("#txtHrefSearch").val(href);
			$("#cboParentFunctionSearch").val(parentId);
			$('#txtLevelSearch').val(level);
		}

		updateSearchingConditions("divNumberRecordOnPageListFunctions", setKeySearch);

		$.ajax({
			type: "POST",
			headers: { "cache-control": "no-cache" },
			url: "/quan-tri-he-thong/quan-ly-chuc-nang/find-function",
			data: {
				keysSearch: keySearch,
				options: optionFilter
			},
			async: false,
			success: function (data) {
				if (data != null) {
					onResponseWhenSearching(data, "divTableFunctions", findFunctions);
				}
			}
		});
		return true;
	}

	function setKeySearch() {
		window.keySearch = functionName + "|" + functionType + "|" + href + "|" + parentId + "|" + level;
	}

	function initOrderBySearching() {
		window.colSort = 'Id';
		window.sortType = 'DESC';
	}

	function pageListOfFunctions(_pagenum) {
		try {
			findFunctions(_pagenum, 0);

		} catch (e) {
			console.log(e.message);
		}
	}
</script>

@* task function *@
<script>
	function getViewToAddNewFunction() {
		$.ajax({
			type: "POST",
			url: "/quan-tri-he-thong/quan-ly-chuc-nang/get-view-to-add-function",
			headers: { "cache-control": "no-cache" },
			async: false,
			success: function (data) {
				if (data != null) {
					if (validateResponse(data)) {
						$("#dpop-functions").html(data);
						ShowPopupDialog("dpop-functions", "Thêm mới chức năng", 600, 0, "txtFunctionNameAdd");
					}
				}
				return false;
			}
		});
	}

	function getViewToEditFunction(functionId) {
		$.ajax({
			type: "POST",
			url: "/quan-tri-he-thong/quan-ly-chuc-nang/get-view-to-edit-function",
			headers: { "cache-control": "no-cache" },
			data: { functionId : functionId },
			async: false,
			success: function (data) {
				if (data != null) {
					if (validateResponse(data)) {
						$("#dpop-functions").html(data);
						ShowPopupDialog("dpop-functions", "Sửa chức năng", 600, 0, "txtFunctionNameEdit");
					}
				}
				return false;
			}
		});
	}

	function doDeleteFunction(functionId) {
		nvsConfirm(null, "Bạn có chắc chắn muốn xóa function này không?", function () {
			$.ajax({
				url: "/quan-tri-he-thong/quan-ly-chuc-nang/do-delete-function",
				type: "POST",
				data: { functionId : functionId },
				headers: { "cache-control": "no-cache" },
				async: false,
				success: function (data) {
					if (data != null) {
						if (onResponse(data)) {
                            ClosePopupDialog('dpop-functions', true);
							window.findFunctions(1, 0);
						}
					}
				},
				error: function (e) {
					console.log(e);
				}
			});

		});
	}

	function viewAllInnerFunction(functionId) {
		$.ajax({
			type: "POST",
			url: "/quan-tri-he-thong/quan-ly-chuc-nang/view-all-inner-function",
			headers: { "cache-control": "no-cache" },
			data: { functionId : functionId },
			async: false,
			success: function (data) {
				if (data != null) {
					if (validateResponse(data)) {
						$("#dpop-functions").html(data);
						ShowPopupDialog("dpop-functions", "Chức năng con", 600, 0, "");
					}
				}
				return false;
			}
		});
	}
</script>
