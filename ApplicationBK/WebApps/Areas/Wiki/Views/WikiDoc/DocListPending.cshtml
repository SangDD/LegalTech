@using BussinessFacade.ModuleMemoryData
@using BussinessFacade.ModuleUsersAndRoles
@using Common.CommonData
@using ObjectInfos;
@{
    ViewBag.Title = "Danh sách bài viết chờ xử lý";
    Layout = "~/ViewsShared/_Layout.cshtml";
    List<WikiCatalogues_Info> _listcata = new List<WikiCatalogues_Info>();
    if (ViewBag.ListCata != null)
    {
        _listcata = ViewBag.ListCata;
    }
}
@try
{
    <style>
        /*độ rộng tên cột title từng trang là khác nhau nên khai báo ở trang đó luôn*/
        .div-search-title > div {
            width: 150px;
        }
        .ms-parent
        {
            margin:0px 3px;
        }
        .ms-choice
        {
            height:30px; 
        }
    </style>

    <div class="divCover">
        <div class="d-nav">
            <img src="~/Content/icons/Body-icon-home.png" /> I
           Wiki
            <span class="red">></span>
            <a href="/wiki-doc/list">Bài viết chờ xử lý</a>
        </div>
    </div>
    <div class="divCover">
        <div class="classLine">
        </div>
    </div>

    <div class="d-main">
        <div class="divCover">
            <div class="classTitle">
                <input type="hidden" value="MODIFIED_DATE" id="colSorted" />
                <input type="hidden" value="DESC" id="SortType" />
                <input type="hidden" value="" id="OptionSorting" />
            </div>
        </div>

        <div class="divCover" id="div-search-simple">

            <div class="div-search-ad">
                <div class="div-search-title">
                    <div style="width: 120px">Danh mục bài viết</div>
                </div>
                <div>
                    <div style="width:200px">
                       <select id="cboSearchWikiCatalogue">
                           <option value="ALL">
                               Tất cả
                           </option>
                           @foreach (WikiCatalogues_Info item in _listcata)
                           {
                               if (item.CATA_LEVEL == 1)
                               {
                                   <option value="@item.ID">
                                       @item.NAME
                                   </option>
                               }
                           }
                       </select>
                    </div>
                </div>
                <div class="div-search-title">
                    <div style="width: 120px">Tiêu đề/Hashtag</div>
                </div>
                <div class="div-search-content">
                    <div>
                        <input type="text" id="txtSearchTitleHashtag" data-controlcondition="TRUE" />
                    </div>
                </div>
            </div>

        </div>

        <div class="divCover">
            <div class="div-search-btn" style="width:450px;">
                <input type="button" value="Tìm kiếm" class="btn-default" onclick="findObjects(1, 1)" />
             <a href="/vi-vn/wiki-manage/wiki-doc/add"><input type="button" value="Thêm bài viết" class="btn-default" style="width: 125px;" /></a>  
            </div>
        </div>

        <div class="divCover">
            <div id="divTableObjects">
                @Html.Partial("/Areas/Wiki/Views/WikiDoc/_PartialDocDataPending.cshtml")
            </div>
        </div>

  

    </div>

    <script>
        var _currentKeySearch = '/Areas/Wiki/Views/WikiDoc/DocListPending.cshtml';
        var _currentOptionFilter = '/Areas/Wiki/Views/WikiDoc/DocListPending.cshtml_optionfilter';
        var _status = '2,4', _catalogue = '', _titleHashtag = '';

        $(document).ready(function () {
             initAllSearchingData(_currentKeySearch, _currentOptionFilter, initOrderBySearching, setKeySearch, findObjects);

            $('txtSearchTitleHashtag').focus();
            $('[data-controlcondition="TRUE"]').on('keypress',
				function (e) {
				    enterKeyPress(e, 'btnfindObjects');
				});
        });





        function findObjects(_pageNumber, _isSearching) {
            try {
                _status = "2,4";
                reinitSearchingConditions(_currentKeySearch, _currentOptionFilter, _pageNumber, _isSearching);
                if (isSearching === 1) {
                    _status = "2,4";
                    _catalogue = $("#cboSearchWikiCatalogue").val();
                    _titleHashtag = $("#txtSearchTitleHashtag").val().trim();

                } else {
                    window.arrKeySearch = window.keySearch.split('|');
                    _status = arrKeySearch[0];
                    _catalogue = arrKeySearch[1];
                    _titleHashtag = arrKeySearch[2];

                    $("#cboSearchWikiCatalogue option[value=" + _catalogue + "]").attr("selected", "selected");
                    $("#txtSearchTitleHashtag").val(_titleHashtag);
                }

                updateSearchingConditions("divNumberRecordOnPageListObjects", setKeySearch);

                $.ajax({
                    type: "POST",
                    headers: { "cache-control": "no-cache" },
                    url: "/wiki-manage/wiki-doc/find-doc-peding",
                    data: {
                        keysSearch: keySearch,
                        options: optionFilter
                    },
                    async: false,
                    success: function (data) {
                        if (data != null) {
                            onResponseWhenSearching(data, "divTableObjects", findObjects);
                        }
                    }
                });
                return true;
            } catch (e) {
                alert(e.toString());
                return false;
            }


        }

        function setKeySearch() {
            if (_status == "")
                _status = "2,4";
            window.keySearch = _status + "|" +  _catalogue + "|" + _titleHashtag;
        }

        function initOrderBySearching() {
            window.colSort = 'MODIFIED_DATE';
            window.sortType = 'DESC';
        }

        function pageListOfObjects(_pagenum) {
            try {
                findObjects(_pagenum, 0);

            } catch (e) {
                console.log(e.message);
            }
        }

        $('#cboSearchWikiCatalogue').multipleSelect({
            filter: true,
            noMatchesFound: "Không tìm thấy dữ liệu",
            single: true,
            isdatastring: false,
            placeholder: 'Tìm kiếm danh mục tin'
        });
    </script>

    @* task function *@
    <script>

        function getViewToAddNewObject() {
            try {
                $.ajax({
                    type: "POST",
                    url: "/wiki-manage/wiki-doc/add-new",
                    headers: { "cache-control": "no-cache" },
                    async: false,
                    success: function (data) {
                        if (data != null) {
                            if (validateResponse(data)) {
                                $("#divPopUpObject").html(data);
                                ShowPopupDialog_Ipace('divWrapperPopUpObject', "Thêm mới hàng hóa/dịch vụ", 900, 500, "txtAddClassCode");
                            }
                        }
                        return false;
                    }
                });
            } catch (e) {
                alert(e.toString());
            }
           
        }

        function getViewToEditObject(p_id, p_display_value) {
            try {
                $.ajax({
                    type: "POST",
                    url: "/wiki-manage/wiki-doc/view-edit",
                    headers: { "cache-control": "no-cache" },
                    data: { p_id: p_id },
                    async: false,
                    success: function (data) {
                        if (data != null) {
                            if (validateResponse(data)) {

                                $("#divPopUpObject").html(data);
                                ShowPopupDialog_Ipace('divWrapperPopUpObject', "Sửa hàng hóa dịch vụ: <span class='data-in-title-popup'>" + p_display_value + "</span>", 900, 500, "txtFullNameEdit");
                            }
                        }
                        return false;
                    }
                });
            } catch (e) {
                alert(e.toString());
            }
           
        }

        function doDeleteObject(p_id) {
            try {
               
                    nvsConfirm(null, "Bạn có chắc chắn muốn xóa hàng hóa/dịch vụ này không?", function () {
                        $.ajax({
                            url: "/wiki-manage/wiki-doc/do-delete-doc",
                            type: "POST",
                            data: { p_id: p_id },
                            headers: { "cache-control": "no-cache" },
                            async: false,
                            success: function (data) {
                                //if (data != null) {
                                //    if (onResponse(data)) {
                                //        ClosePopupDialog('dpop-users', true);
                                //        findObjects(1, 0);
                                //    }
                                //}
                                if (data.result >= 0) {
                                    showSuccess("Xóa dữ liệu thành công!");
                                    window.findObjects(1, 0);
                                }
                            },
                            error: function (e) {
                                console.log(e);
                            }
                        });

                    });
                
            } catch (e) {
                alert(e.toString());
            }
           
        }
  

         

    </script>
}
catch (Exception)
{
    // ignored
}