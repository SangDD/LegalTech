!function (t, e, i) { var o = function (i, o) { "use strict"; var l = function (t, e) { var o = this; if (this instanceof l) { void 0 === e && (e = {}); var s = i.fn.dataTable.camelToHungarian; s && (s(l.defaults, l.defaults, !0), s(l.defaults, e)); var r = i.fn.dataTable.Api ? new i.fn.dataTable.Api(t).settings()[0] : t.fnSettings(); this.s = { dt: r, iTableColumns: r.aoColumns.length, aiOuterWidths: [], aiInnerWidths: [] }, this.dom = { scroller: null, header: null, body: null, footer: null, grid: { wrapper: null, dt: null, left: { wrapper: null, head: null, body: null, foot: null }, right: { wrapper: null, head: null, body: null, foot: null } }, clone: { left: { header: null, body: null, footer: null }, right: { header: null, body: null, footer: null } } }, r._oFixedColumns = this, r._bInitComplete ? this._fnConstruct(e) : r.oApi._fnCallbackReg(r, "aoInitComplete", function () { o._fnConstruct(e) }, "FixedColumns") } else alert("FixedColumns warning: FixedColumns must be initialised with the 'new' keyword.") }; return l.prototype = { fnUpdate: function () { this._fnDraw(!0) }, fnRedrawLayout: function () { this._fnColCalc(), this._fnGridLayout(), this.fnUpdate() }, fnRecalculateHeight: function (t) { delete t._DTTC_iHeight, t.style.height = "auto" }, fnSetRowHeight: function (t, e) { t.style.height = e + "px" }, fnGetPosition: function (t) { var e, o = this.s.dt.oInstance; if (i(t).parents(".DTFC_Cloned").length) { if ("tr" === t.nodeName.toLowerCase()) return e = i(t).index(), o.fnGetPosition(i("tr", this.s.dt.nTBody)[e]); var l = i(t).index(); return e = i(t.parentNode).index(), [o.fnGetPosition(i("tr", this.s.dt.nTBody)[e]), l, o.oApi._fnVisibleToColumnIndex(this.s.dt, l)] } return o.fnGetPosition(t) }, _fnConstruct: function (o) { var s = this; if ("function" == typeof this.s.dt.oInstance.fnVersionCheck && !0 === this.s.dt.oInstance.fnVersionCheck("1.8.0")) if ("" !== this.s.dt.oScroll.sX) { this.s = i.extend(!0, this.s, l.defaults, o); var r, n = this.s.dt.oClasses; this.dom.grid.dt = i(this.s.dt.nTable).parents("div." + n.sScrollWrapper)[0], this.dom.scroller = i("div." + n.sScrollBody, this.dom.grid.dt)[0], this._fnColCalc(), this._fnGridSetup(), i(this.dom.scroller).on("mouseover.DTFC touchstart.DTFC", function () { r = "main" }).on("scroll.DTFC", function () { "main" === r && (s.s.iLeftColumns > 0 && (s.dom.grid.left.liner.scrollTop = s.dom.scroller.scrollTop), s.s.iRightColumns > 0 && (s.dom.grid.right.liner.scrollTop = s.dom.scroller.scrollTop)) }); var d = "onwheel" in e.createElement("div") ? "wheel.DTFC" : "mousewheel.DTFC"; s.s.iLeftColumns > 0 && i(s.dom.grid.left.liner).on("mouseover.DTFC touchstart.DTFC", function () { r = "left" }).on("scroll.DTFC", function () { "left" === r && (s.dom.scroller.scrollTop = s.dom.grid.left.liner.scrollTop, s.s.iRightColumns > 0 && (s.dom.grid.right.liner.scrollTop = s.dom.grid.left.liner.scrollTop)) }).on(d, function (t) { var e = "wheel" === t.type ? -t.originalEvent.deltaX : t.originalEvent.wheelDeltaX; s.dom.scroller.scrollLeft -= e }), s.s.iRightColumns > 0 && i(s.dom.grid.right.liner).on("mouseover.DTFC touchstart.DTFC", function () { r = "right" }).on("scroll.DTFC", function () { "right" === r && (s.dom.scroller.scrollTop = s.dom.grid.right.liner.scrollTop, s.s.iLeftColumns > 0 && (s.dom.grid.left.liner.scrollTop = s.dom.grid.right.liner.scrollTop)) }).on(d, function (t) { var e = "wheel" === t.type ? -t.originalEvent.deltaX : t.originalEvent.wheelDeltaX; s.dom.scroller.scrollLeft -= e }), i(t).on("resize.DTFC", function () { s._fnGridLayout.call(s) }); var a = !0, h = i(this.s.dt.nTable); h.on("draw.dt.DTFC", function () { s._fnDraw.call(s, a), a = !1 }).on("column-sizing.dt.DTFC", function () { s._fnColCalc(), s._fnGridLayout(s) }).on("column-visibility.dt.DTFC", function () { s._fnColCalc(), s._fnGridLayout(s), s._fnDraw(!0) }).on("destroy.dt.DTFC", function () { h.off("column-sizing.dt.DTFC destroy.dt.DTFC draw.dt.DTFC"), i(s.dom.scroller).off("scroll.DTFC mouseover.DTFC"), i(t).off("resize.DTFC"), i(s.dom.grid.left.liner).off("scroll.DTFC mouseover.DTFC " + d), i(s.dom.grid.left.wrapper).remove(), i(s.dom.grid.right.liner).off("scroll.DTFC mouseover.DTFC " + d), i(s.dom.grid.right.wrapper).remove() }), this._fnGridLayout(), this.s.dt.oInstance.fnDraw(!1) } else this.s.dt.oInstance.oApi._fnLog(this.s.dt, 1, "FixedColumns is not needed (no x-scrolling in DataTables enabled), so no action will be taken. Use 'FixedHeader' for column fixing when scrolling is not enabled"); else alert("FixedColumns " + l.VERSION + " required DataTables 1.8.0 or later. Please upgrade your DataTables installation") }, _fnColCalc: function () { var t = this, e = 0, o = 0; this.s.aiInnerWidths = [], this.s.aiOuterWidths = [], i.each(this.s.dt.aoColumns, function (l, s) { var r, n = i(s.nTh); if (n.filter(":visible").length) { var d = n.outerWidth(); 0 === t.s.aiOuterWidths.length && (d += "string" == typeof (r = i(t.s.dt.nTable).css("border-left-width")) ? 1 : parseInt(r, 10)), t.s.aiOuterWidths.length === t.s.dt.aoColumns.length - 1 && (d += "string" == typeof (r = i(t.s.dt.nTable).css("border-right-width")) ? 1 : parseInt(r, 10)), t.s.aiOuterWidths.push(d), t.s.aiInnerWidths.push(n.width()), l < t.s.iLeftColumns && (e += d), t.s.iTableColumns - t.s.iRightColumns <= l && (o += d) } else t.s.aiInnerWidths.push(0), t.s.aiOuterWidths.push(0) }), this.s.iLeftWidth = e, this.s.iRightWidth = o }, _fnGridSetup: function () { var t, e = this._fnDTOverflow(); this.dom.body = this.s.dt.nTable, this.dom.header = this.s.dt.nTHead.parentNode, this.dom.header.parentNode.parentNode.style.position = "relative"; var o = i('<div class="DTFC_ScrollWrapper" style="position:relative; clear:both;"><div class="DTFC_LeftWrapper" style="position:absolute; top:0; left:0;"><div class="DTFC_LeftHeadWrapper" style="position:relative; top:0; left:0; overflow:hidden;"></div><div class="DTFC_LeftBodyWrapper" style="position:relative; top:0; left:0; overflow:hidden;"><div class="DTFC_LeftBodyLiner" style="position:relative; top:0; left:0; overflow:hidden;"></div></div><div class="DTFC_LeftFootWrapper" style="position:relative; top:0; left:0; overflow:hidden;"></div></div><div class="DTFC_RightWrapper" style="position:absolute; top:0; left:0;"><div class="DTFC_RightHeadWrapper" style="position:relative; top:0; left:0;"><div class="DTFC_RightHeadBlocker DTFC_Blocker" style="position:absolute; top:0; bottom:0;"></div></div><div class="DTFC_RightBodyWrapper" style="position:relative; top:0; left:0; overflow:hidden;"><div class="DTFC_RightBodyLiner" style="position:relative; top:0; left:0; overflow:hidden;"></div></div><div class="DTFC_RightFootWrapper" style="position:relative; top:0; left:0;"><div class="DTFC_RightFootBlocker DTFC_Blocker" style="position:absolute; top:0; bottom:0;"></div></div></div></div>')[0], l = o.childNodes[0], s = o.childNodes[1]; this.dom.grid.dt.parentNode.insertBefore(o, this.dom.grid.dt), o.appendChild(this.dom.grid.dt), this.dom.grid.wrapper = o, this.s.iLeftColumns > 0 && (this.dom.grid.left.wrapper = l, this.dom.grid.left.head = l.childNodes[0], this.dom.grid.left.body = l.childNodes[1], this.dom.grid.left.liner = i("div.DTFC_LeftBodyLiner", o)[0], o.appendChild(l)), this.s.iRightColumns > 0 && (this.dom.grid.right.wrapper = s, this.dom.grid.right.head = s.childNodes[0], this.dom.grid.right.body = s.childNodes[1], this.dom.grid.right.liner = i("div.DTFC_RightBodyLiner", o)[0], (t = i("div.DTFC_RightHeadBlocker", o)[0]).style.width = e.bar + "px", t.style.right = -e.bar + "px", this.dom.grid.right.headBlock = t, (t = i("div.DTFC_RightFootBlocker", o)[0]).style.width = e.bar + "px", t.style.right = -e.bar + "px", this.dom.grid.right.footBlock = t, o.appendChild(s)), this.s.dt.nTFoot && (this.dom.footer = this.s.dt.nTFoot.parentNode, this.s.iLeftColumns > 0 && (this.dom.grid.left.foot = l.childNodes[2]), this.s.iRightColumns > 0 && (this.dom.grid.right.foot = s.childNodes[2])) }, _fnGridLayout: function () { var t, e = this.dom.grid, o = i(e.wrapper).width(), l = i(this.s.dt.nTable.parentNode).outerHeight(), s = i(this.s.dt.nTable.parentNode.parentNode).outerHeight(), r = this._fnDTOverflow(), n = this.s.iLeftWidth, d = this.s.iRightWidth, a = function (t, e) { r.bar ? t.style.width = e + "px" : (t.style.width = e + "px", t.style.paddingRight = "0px", t.style.boxSizing = "border-box") }; r.x && (l -= r.bar), e.wrapper.style.height = s + "px", this.s.iLeftColumns > 0 && (e.left.wrapper.style.width = n + "px", e.left.wrapper.style.height = "1px", e.left.body.style.height = l + "px", e.left.foot && (e.left.foot.style.top = (r.x ? r.bar : 0) + "px"), a(e.left.liner, n), e.left.liner.style.height = l + "px"), this.s.iRightColumns > 0 && (t = o - d, r.y && (t -= r.bar), e.right.wrapper.style.width = d + "px", e.right.wrapper.style.left = t + "px", e.right.wrapper.style.height = "1px", e.right.body.style.height = l + "px", e.right.foot && (e.right.foot.style.top = (r.x ? r.bar : 0) + "px"), a(e.right.liner, d), e.right.liner.style.height = l + "px", e.right.headBlock.style.display = r.y ? "block" : "none", e.right.footBlock.style.display = r.y ? "block" : "none") }, _fnDTOverflow: function () { var t = this.s.dt.nTable, e = t.parentNode, i = { x: !1, y: !1, bar: this.s.dt.oScroll.iBarWidth }; return t.offsetWidth > e.clientWidth && (i.x = !0), t.offsetHeight > e.clientHeight && (i.y = !0), i }, _fnDraw: function (t) { this._fnGridLayout(), this._fnCloneLeft(t), this._fnCloneRight(t), null !== this.s.fnDrawCallback && this.s.fnDrawCallback.call(this, this.dom.clone.left, this.dom.clone.right), i(this).trigger("draw.dtfc", { leftClone: this.dom.clone.left, rightClone: this.dom.clone.right }) }, _fnCloneRight: function (t) { if (!(this.s.iRightColumns <= 0)) { var e, i = []; for (e = this.s.iTableColumns - this.s.iRightColumns; e < this.s.iTableColumns; e++) this.s.dt.aoColumns[e].bVisible && i.push(e); this._fnClone(this.dom.clone.right, this.dom.grid.right, i, t) } }, _fnCloneLeft: function (t) { if (!(this.s.iLeftColumns <= 0)) { var e, i = []; for (e = 0; e < this.s.iLeftColumns; e++) this.s.dt.aoColumns[e].bVisible && i.push(e); this._fnClone(this.dom.clone.left, this.dom.grid.left, i, t) } }, _fnCopyLayout: function (t, e) { for (var o = [], l = [], s = [], r = 0, n = t.length; r < n; r++) { var d = []; d.nTr = i(t[r].nTr).clone(!0, !0)[0]; for (var a = 0, h = this.s.iTableColumns; a < h; a++) if (-1 !== i.inArray(a, e)) { var f = i.inArray(t[r][a].cell, s); if (-1 === f) { var p = i(t[r][a].cell).clone(!0, !0)[0]; l.push(p), s.push(t[r][a].cell), d.push({ cell: p, unique: t[r][a].unique }) } else d.push({ cell: l[f], unique: t[r][a].unique }) } o.push(d) } return o }, _fnClone: function (t, e, o, l) { var s, r, n, d, a, h, f, p, c, u, g = this, m = this.s.dt; if (l) { for (null !== t.header && t.header.parentNode.removeChild(t.header), t.header = i(this.dom.header).clone(!0, !0)[0], t.header.className += " DTFC_Cloned", t.header.style.width = /Firefox/i.test(navigator.userAgent) ? e.head.offsetWidth - 1 + "px" : e.head.offsetWidth + "px", e.head.appendChild(t.header), p = this._fnCopyLayout(m.aoHeader, o), (c = i(">thead", t.header)).empty(), s = 0, r = p.length; s < r; s++) c[0].appendChild(p[s].nTr); c.width(); m.oApi._fnDrawHead(m, p, !0) } else for (p = this._fnCopyLayout(m.aoHeader, o), u = [], m.oApi._fnDetectHeader(u, i(">thead", t.header)[0]), s = 0, r = p.length; s < r; s++) for (n = 0, d = p[s].length; n < d; n++) u[s][n].cell.className = p[s][n].cell.className, i("span.DataTables_sort_icon", u[s][n].cell).each(function () { this.className = i("span.DataTables_sort_icon", p[s][n].cell)[0].className }); this._fnEqualiseHeights("thead", this.dom.header, t.header), "auto" == this.s.sHeightMatch && i(">tbody>tr", g.dom.body).css("height", "auto"), null !== t.body && (t.body.parentNode.removeChild(t.body), t.body = null), t.body = i(this.dom.body).clone(!0)[0], t.body.className += " DTFC_Cloned", t.body.style.paddingBottom = m.oScroll.iBarWidth + "px", t.body.style.marginBottom = 2 * m.oScroll.iBarWidth + "px", null !== t.body.getAttribute("id") && t.body.removeAttribute("id"), i(">thead>tr", t.body).empty(), i(">tfoot", t.body).remove(); var y = i("tbody", t.body)[0]; if (i(y).empty(), m.aiDisplay.length > 0) { var C = i(">thead>tr", t.body)[0]; for (f = 0; f < o.length; f++) { a = o[f], (h = i(m.aoColumns[a].nTh).clone(!0)[0]).innerHTML = ""; var T = h.style; T.paddingTop = "0", T.paddingBottom = "0", T.borderTopWidth = "0", T.borderBottomWidth = "0", T.height = 0, T.width = g.s.aiInnerWidths[a] + "px", C.appendChild(h) } i(">tbody>tr", g.dom.body).each(function (t) { var e = this.cloneNode(!1); e.removeAttribute("id"); var l = !1 === g.s.dt.oFeatures.bServerSide ? g.s.dt.aiDisplay[g.s.dt._iDisplayStart + t] : t, s = g.s.dt.aoData[l].anCells || i(this).children("td, th"); for (f = 0; f < o.length; f++) a = o[f], s.length > 0 && (h = i(s[a]).clone(!0, !0)[0], e.appendChild(h)); y.appendChild(e) }) } else i(">tbody>tr", g.dom.body).each(function (t) { (h = this.cloneNode(!0)).className += " DTFC_NoData", i("td", h).html(""), y.appendChild(h) }); if (t.body.style.width = /Firefox/i.test(navigator.userAgent) ? e.head.offsetWidth - 1 + "px" : e.head.offsetWidth + "px", t.body.style.margin = "0", t.body.style.padding = "0", void 0 !== m.oScroller) { var b = m.oScroller.dom.force; e.forcer ? e.forcer.style.height = b.style.height : (e.forcer = b.cloneNode(!0), e.liner.appendChild(e.forcer)) } if (e.liner.appendChild(t.body), this._fnEqualiseHeights("tbody", g.dom.body, t.body), null !== m.nTFoot) { if (l) { null !== t.footer && t.footer.parentNode.removeChild(t.footer), t.footer = i(this.dom.footer).clone(!0, !0)[0], t.footer.className += " DTFC_Cloned", t.footer.style.width = /Firefox/i.test(navigator.userAgent) ? e.head.offsetWidth - 1 + "px" : e.head.offsetWidth + "px", e.foot.appendChild(t.footer), p = this._fnCopyLayout(m.aoFooter, o); var v = i(">tfoot", t.footer); for (v.empty(), s = 0, r = p.length; s < r; s++) v[0].appendChild(p[s].nTr); m.oApi._fnDrawHead(m, p, !0) } else { p = this._fnCopyLayout(m.aoFooter, o); var _ = []; for (m.oApi._fnDetectHeader(_, i(">tfoot", t.footer)[0]), s = 0, r = p.length; s < r; s++) for (n = 0, d = p[s].length; n < d; n++) _[s][n].cell.className = p[s][n].cell.className } this._fnEqualiseHeights("tfoot", this.dom.footer, t.footer) } var w = m.oApi._fnGetUniqueThs(m, i(">thead", t.header)[0]); i(w).each(function (t) { a = o[t], this.style.width = g.s.aiInnerWidths[a] + "px" }), null !== g.s.dt.nTFoot && (w = m.oApi._fnGetUniqueThs(m, i(">tfoot", t.footer)[0]), i(w).each(function (t) { a = o[t], this.style.width = g.s.aiInnerWidths[a] + "px" })) }, _fnGetTrNodes: function (t) { for (var e = [], i = 0, o = t.childNodes.length; i < o; i++) "TR" == t.childNodes[i].nodeName.toUpperCase() && e.push(t.childNodes[i]); return e }, _fnEqualiseHeights: function (t, e, o) { if ("none" != this.s.sHeightMatch || "thead" === t || "tfoot" === t) { var l, s, r, n, d, a = e.getElementsByTagName(t)[0], h = o.getElementsByTagName(t)[0], f = i(">" + t + ">tr:eq(0)", e).children(":first"), p = (f.outerHeight(), f.height(), this._fnGetTrNodes(a)), c = this._fnGetTrNodes(h), u = []; for (l = 0, s = c.length; l < s; l++) n = p[l].offsetHeight, r = (d = c[l].offsetHeight) > n ? d : n, "semiauto" == this.s.sHeightMatch && (p[l]._DTTC_iHeight = r), u.push(r); for (l = 0, s = c.length; l < s; l++) c[l].style.height = u[l] + "px", p[l].style.height = u[l] + "px" } }, _fnFixAll: function () { var t = i(".dataTables_scrollBody").width(), e = i(".dataTables_scrollBody").height(); i(".dataTables_scrollBody").children().width() <= t && (i(".dataTables_scrollBody").css({ "overflow-x": "hidden", height: e - 17 + "px" }), i(".dataTables_wrapper").children().height(i(".dataTables_wrapper").children().height() - 17), i(".dataTables_wrapper").parent().css("overflow", "hidden"), i(".dataTables_scroll").find(".tdragTable").width(t - 17 + "px")) } }, l.defaults = { iLeftColumns: 1, iRightColumns: 0, fnDrawCallback: null, sHeightMatch: "semiauto" }, l.version = "3.0.4", i.fn.dataTable.FixedColumns = l, i.fn.DataTable.FixedColumns = l, l }; "function" == typeof define && define.amd ? define(["jquery", "datatables"], o) : "object" == typeof exports ? o(require("jquery"), require("datatables")) : jQuery && !jQuery.fn.dataTable.FixedColumns && o(jQuery, jQuery.fn.dataTable) }(window, document);