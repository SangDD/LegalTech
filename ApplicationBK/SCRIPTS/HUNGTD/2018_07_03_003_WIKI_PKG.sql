CREATE OR REPLACE 
PACKAGE PKG_WIKI_CATALOUGE
  IS

PROCEDURE PROC_WIKI_CATALOGUES_INSERT
(
    P_NAME IN WIKI_CATALOGUES.NAME % TYPE,
    P_CATA_LEVEL IN WIKI_CATALOGUES.CATA_LEVEL % TYPE,
    P_CREATED_BY IN WIKI_CATALOGUES.CREATED_BY % TYPE,
    P_CREATED_DATE IN WIKI_CATALOGUES.CREATED_DATE % TYPE,
    P_RETURN OUT NUMBER
);
PROCEDURE PROC_WIKI_CATALOGUES_UPDATE
(
P_ID IN WIKI_CATALOGUES.ID % TYPE,
P_NAME IN WIKI_CATALOGUES.NAME % TYPE,
P_CATA_LEVEL IN WIKI_CATALOGUES.CATA_LEVEL % TYPE,
P_MODIFIED_BY IN WIKI_CATALOGUES.MODIFIED_BY % TYPE,
P_MODIFIED_DATE IN WIKI_CATALOGUES.MODIFIED_DATE % TYPE,
P_RETURN OUT NUMBER
);

PROCEDURE PROC_WIKI_CATALOGUES_GETALL
(
P_CURSOR OUT PKG_COMMON.t_cursor
);

PROCEDURE PROC_WIKI_CATALOGUES_GETBYID
(
  P_ID IN WIKI_CATALOGUES.ID % TYPE,
  P_CURSOR OUT PKG_COMMON.t_cursor
);


PROCEDURE PROC_WIKI_CATALOGUES_DELETE
(
  P_ID IN WIKI_CATALOGUES.ID % TYPE,
  P_RETURN OUT NUMBER
);

END; -- Package spec
/


CREATE OR REPLACE 
PACKAGE BODY PKG_WIKI_CATALOUGE
IS


PROCEDURE PROC_WIKI_CATALOGUES_INSERT
(
    P_NAME IN WIKI_CATALOGUES.NAME % TYPE,
    P_CATA_LEVEL IN WIKI_CATALOGUES.CATA_LEVEL % TYPE,
    P_CREATED_BY IN WIKI_CATALOGUES.CREATED_BY % TYPE,
    P_CREATED_DATE IN WIKI_CATALOGUES.CREATED_DATE % TYPE,
    P_RETURN OUT NUMBER
)
IS
V_ID NUMBER;
BEGIN

SELECT SEQ_WIKI_CATAS.NEXTVAL INTO V_ID FROM DUAL;
 P_RETURN := V_ID;
    INSERT INTO WIKI_CATALOGUES
    (
    ID, NAME, CATA_LEVEL, CREATED_BY, CREATED_DATE
     )
    VALUES
    (
     V_ID, P_NAME, P_CATA_LEVEL, P_CREATED_BY, TRUNC(P_CREATED_DATE)
    );

COMMIT;
EXCEPTION
WHEN OTHERS THEN
P_RETURN := -1;
RAISE;
END;




--2.UPDATE

PROCEDURE PROC_WIKI_CATALOGUES_UPDATE
(
P_ID IN WIKI_CATALOGUES.ID % TYPE,
P_NAME IN WIKI_CATALOGUES.NAME % TYPE,
P_CATA_LEVEL IN WIKI_CATALOGUES.CATA_LEVEL % TYPE,
P_MODIFIED_BY IN WIKI_CATALOGUES.MODIFIED_BY % TYPE,
P_MODIFIED_DATE IN WIKI_CATALOGUES.MODIFIED_DATE % TYPE,
P_RETURN OUT NUMBER
)
IS

BEGIN
 P_RETURN := 0;
UPDATE WIKI_CATALOGUES SET
NAME = P_NAME,
CATA_LEVEL = P_CATA_LEVEL,
MODIFIED_BY = P_MODIFIED_BY,
MODIFIED_DATE = TRUNC(P_MODIFIED_DATE)
WHERE ID = P_ID;
COMMIT;
EXCEPTION
WHEN OTHERS THEN
P_RETURN := -1;
ROLLBACK;
RAISE;
END;

--3.GELALL

PROCEDURE PROC_WIKI_CATALOGUES_GETALL
(
P_CURSOR OUT PKG_COMMON.t_cursor
)
IS
 BEGIN
 OPEN P_CURSOR FOR SELECT * FROM WIKI_CATALOGUES;
END;

--4.GELBYID

PROCEDURE PROC_WIKI_CATALOGUES_GETBYID
(
  P_ID IN WIKI_CATALOGUES.ID % TYPE,
  P_CURSOR OUT PKG_COMMON.t_cursor
)
IS
 BEGIN
    OPEN P_CURSOR FOR SELECT WIKI_CATALOGUES.* FROM WIKI_CATALOGUES WHERE ID = P_ID;
END;



PROCEDURE PROC_WIKI_CATALOGUES_DELETE
(
  P_ID IN WIKI_CATALOGUES.ID % TYPE,
  P_RETURN OUT NUMBER
)
IS
 BEGIN
    UPDATE WIKI_CATALOGUES SET DELETED = 1 WHERE ID = P_ID ;
    P_RETURN := 0;
EXCEPTION
WHEN OTHERS THEN
P_RETURN := -1;
ROLLBACK;
RAISE;
END;

END;
/
CREATE OR REPLACE 
PACKAGE PKG_WIKI_DOCS
  IS
 PROCEDURE PROC_WIKI_DOCS_INSERT
(
    P_ID IN WIKI_DOCS.ID % TYPE,
    P_TITLE IN WIKI_DOCS.TITLE % TYPE,
    P_CONTENT IN WIKI_DOCS.CONTENT % TYPE,
    P_VIEW_NUMBER IN WIKI_DOCS.VIEW_NUMBER % TYPE,
    P_CREATED_BY IN WIKI_DOCS.CREATED_BY % TYPE,
    P_CREATED_DATE IN WIKI_DOCS.CREATED_DATE % TYPE,
    P_LANGUAGE_CODE IN WIKI_DOCS.LANGUAGE_CODE % TYPE,
    P_HASHTAG IN VARCHAR2,
    P_RETURN OUT NUMBER
);

PROCEDURE PROC_WIKI_DOCS_UPDATE
(
P_ID IN WIKI_DOCS.ID % TYPE,
P_TITLE IN WIKI_DOCS.TITLE % TYPE,
P_CONTENT IN WIKI_DOCS.CONTENT % TYPE,
P_VIEW_NUMBER IN WIKI_DOCS.VIEW_NUMBER % TYPE,
P_MODIFIED_BY IN WIKI_DOCS.MODIFIED_BY % TYPE,
P_MODIFIED_DATE IN WIKI_DOCS.MODIFIED_DATE % TYPE,
P_LANGUAGE_CODE IN WIKI_DOCS.LANGUAGE_CODE % TYPE,
    P_HASHTAG IN VARCHAR2,
P_RETURN OUT NUMBER
);

PROCEDURE PROC_WIKI_DOCS_GETALL
(
P_CURSOR OUT PKG_COMMON.t_cursor
);


PROCEDURE PROC_WIKI_DOCS_GETBYID
(
  P_ID IN WIKI_DOCS.ID % TYPE,
  P_CURSOR OUT PKG_COMMON.t_cursor
);

PROCEDURE PROC_WIKI_DOCS_DELETE
(
  P_ID IN WIKI_DOCS.ID % TYPE,
  P_RETURN OUT NUMBER
);

END; -- Package spec
/


CREATE OR REPLACE 
PACKAGE BODY PKG_WIKI_DOCS
IS


PROCEDURE PROC_WIKI_DOCS_INSERT
(
    P_ID IN WIKI_DOCS.ID % TYPE,
    P_TITLE IN WIKI_DOCS.TITLE % TYPE,
    P_CONTENT IN WIKI_DOCS.CONTENT % TYPE,
    P_VIEW_NUMBER IN WIKI_DOCS.VIEW_NUMBER % TYPE,
    P_CREATED_BY IN WIKI_DOCS.CREATED_BY % TYPE,
    P_CREATED_DATE IN WIKI_DOCS.CREATED_DATE % TYPE,
    P_LANGUAGE_CODE IN WIKI_DOCS.LANGUAGE_CODE % TYPE,
    P_HASHTAG IN VARCHAR2,
    P_RETURN OUT NUMBER
)
IS
V_ID NUMBER;
BEGIN

SELECT SEQ_WIKI_DOCS.NEXTVAL INTO V_ID FROM DUAL;
P_RETURN := V_ID;
    INSERT INTO WIKI_DOCS
    (
        ID, TITLE, CONTENT, VIEW_NUMBER, CREATED_BY, CREATED_DATE, LANGUAGE_CODE, HASHTAG
        )
    VALUES
    (
        V_ID, P_TITLE, P_CONTENT, P_VIEW_NUMBER, P_CREATED_BY,
         TRUNC(P_CREATED_DATE), P_LANGUAGE_CODE, P_HASHTAG
     );


COMMIT;
EXCEPTION
WHEN OTHERS THEN
P_RETURN :=-1;
RAISE;
END;




--2.UPDATE

PROCEDURE PROC_WIKI_DOCS_UPDATE
(
P_ID IN WIKI_DOCS.ID % TYPE,
P_TITLE IN WIKI_DOCS.TITLE % TYPE,
P_CONTENT IN WIKI_DOCS.CONTENT % TYPE,
P_VIEW_NUMBER IN WIKI_DOCS.VIEW_NUMBER % TYPE,
P_MODIFIED_BY IN WIKI_DOCS.MODIFIED_BY % TYPE,
P_MODIFIED_DATE IN WIKI_DOCS.MODIFIED_DATE % TYPE,
P_LANGUAGE_CODE IN WIKI_DOCS.LANGUAGE_CODE % TYPE,
P_HASHTAG IN VARCHAR2,
P_RETURN OUT NUMBER
)
IS
BEGIN
P_RETURN := P_ID;
UPDATE WIKI_DOCS SET
TITLE = P_TITLE,
CONTENT = P_CONTENT,
VIEW_NUMBER = P_VIEW_NUMBER,
MODIFIED_BY = P_MODIFIED_BY,
MODIFIED_DATE = TRUNC(P_MODIFIED_DATE),
LANGUAGE_CODE = P_LANGUAGE_CODE,
HASHTAG = P_HASHTAG
WHERE ID = P_ID;
COMMIT;
EXCEPTION
WHEN OTHERS THEN
ROLLBACK;
RAISE;
END;
--2END

--3.GELALL

PROCEDURE PROC_WIKI_DOCS_GETALL
(
P_CURSOR OUT PKG_COMMON.t_cursor
)
IS
 BEGIN
 OPEN P_CURSOR FOR SELECT * FROM WIKI_DOCS;
END;

--4.GELBYID

PROCEDURE PROC_WIKI_DOCS_GETBYID
(
  P_ID IN WIKI_DOCS.ID % TYPE,
  P_CURSOR OUT PKG_COMMON.t_cursor
)
IS
 BEGIN
OPEN P_CURSOR FOR SELECT WIKI_DOCS.* FROM WIKI_DOCS
 WHERE ID = P_ID;
END;

PROCEDURE PROC_WIKI_DOCS_DELETE
(
  P_ID IN WIKI_DOCS.ID % TYPE,
  P_RETURN OUT NUMBER
)
IS
 BEGIN
 UPDATE  WIKI_DOCS SET DELETED = 1
 WHERE ID = P_ID;

 EXCEPTION
WHEN OTHERS THEN
P_RETURN := -1;
ROLLBACK;
RAISE;
END;

END;
/



